[{"Uid":"LitJson.UnityTypeBindings","Type":"class","Syntax":{"content":"public static class UnityTypeBindings","content.vb":"Public Module UnityTypeBindings"},"File":"../Documentation~/api/LitJson.UnityTypeBindings.yml","Metadata":{},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.UnityTypeBindings.Register","Type":"method","Syntax":{"content":"public static void Register()","content.vb":"Public Shared Sub Register"},"File":"../Documentation~/api/LitJson.UnityTypeBindings.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonToken","Type":"enum","Syntax":{"content":"public enum JsonToken","content.vb":"Public Enum JsonToken"},"File":"../Documentation~/api/LitJson.JsonToken.yml","Metadata":{},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonToken.None","Type":"field","Syntax":{"content":"None = 0","return":{"type":"LitJson.JsonToken"}},"File":"../Documentation~/api/LitJson.JsonToken.yml","Metadata":{"type":"field","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonToken.Null","Type":"field","Syntax":{"content":"Null = 1","return":{"type":"LitJson.JsonToken"}},"File":"../Documentation~/api/LitJson.JsonToken.yml","Metadata":{"type":"field","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonToken.ObjectStart","Type":"field","Syntax":{"content":"ObjectStart = 2","return":{"type":"LitJson.JsonToken"}},"File":"../Documentation~/api/LitJson.JsonToken.yml","Metadata":{"type":"field","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonToken.PropertyName","Type":"field","Syntax":{"content":"PropertyName = 3","return":{"type":"LitJson.JsonToken"}},"File":"../Documentation~/api/LitJson.JsonToken.yml","Metadata":{"type":"field","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonToken.ObjectEnd","Type":"field","Syntax":{"content":"ObjectEnd = 4","return":{"type":"LitJson.JsonToken"}},"File":"../Documentation~/api/LitJson.JsonToken.yml","Metadata":{"type":"field","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonToken.ArrayStart","Type":"field","Syntax":{"content":"ArrayStart = 5","return":{"type":"LitJson.JsonToken"}},"File":"../Documentation~/api/LitJson.JsonToken.yml","Metadata":{"type":"field","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonToken.ArrayEnd","Type":"field","Syntax":{"content":"ArrayEnd = 6","return":{"type":"LitJson.JsonToken"}},"File":"../Documentation~/api/LitJson.JsonToken.yml","Metadata":{"type":"field","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonToken.Real","Type":"field","Syntax":{"content":"Real = 7","return":{"type":"LitJson.JsonToken"}},"File":"../Documentation~/api/LitJson.JsonToken.yml","Metadata":{"type":"field","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonToken.Natural","Type":"field","Syntax":{"content":"Natural = 8","return":{"type":"LitJson.JsonToken"}},"File":"../Documentation~/api/LitJson.JsonToken.yml","Metadata":{"type":"field","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonToken.String","Type":"field","Syntax":{"content":"String = 9","return":{"type":"LitJson.JsonToken"}},"File":"../Documentation~/api/LitJson.JsonToken.yml","Metadata":{"type":"field","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonToken.Boolean","Type":"field","Syntax":{"content":"Boolean = 10","return":{"type":"LitJson.JsonToken"}},"File":"../Documentation~/api/LitJson.JsonToken.yml","Metadata":{"type":"field","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.Extensions.Extensions","Type":"class","Syntax":{"content":"public static class Extensions","content.vb":"Public Module Extensions"},"File":"../Documentation~/api/LitJson.Extensions.Extensions.yml","Metadata":{},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.Extensions.Extensions.WriteProperty(LitJson.JsonWriter,System.String,System.Int64)","Type":"method","Syntax":{"content":"public static void WriteProperty(this JsonWriter w, string name, long value)","parameters":[{"id":"w","type":"LitJson.JsonWriter"},{"id":"name","type":"System.String"},{"id":"value","type":"System.Int64"}],"content.vb":"<ExtensionAttribute>\nPublic Shared Sub WriteProperty(w As JsonWriter, name As String, value As Long)"},"File":"../Documentation~/api/LitJson.Extensions.Extensions.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.Extensions.Extensions.WriteProperty(LitJson.JsonWriter,System.String,System.String)","Type":"method","Syntax":{"content":"public static void WriteProperty(this JsonWriter w, string name, string value)","parameters":[{"id":"w","type":"LitJson.JsonWriter"},{"id":"name","type":"System.String"},{"id":"value","type":"System.String"}],"content.vb":"<ExtensionAttribute>\nPublic Shared Sub WriteProperty(w As JsonWriter, name As String, value As String)"},"File":"../Documentation~/api/LitJson.Extensions.Extensions.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.Extensions.Extensions.WriteProperty(LitJson.JsonWriter,System.String,System.Boolean)","Type":"method","Syntax":{"content":"public static void WriteProperty(this JsonWriter w, string name, bool value)","parameters":[{"id":"w","type":"LitJson.JsonWriter"},{"id":"name","type":"System.String"},{"id":"value","type":"System.Boolean"}],"content.vb":"<ExtensionAttribute>\nPublic Shared Sub WriteProperty(w As JsonWriter, name As String, value As Boolean)"},"File":"../Documentation~/api/LitJson.Extensions.Extensions.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.Extensions.Extensions.WriteProperty(LitJson.JsonWriter,System.String,System.Double)","Type":"method","Syntax":{"content":"public static void WriteProperty(this JsonWriter w, string name, double value)","parameters":[{"id":"w","type":"LitJson.JsonWriter"},{"id":"name","type":"System.String"},{"id":"value","type":"System.Double"}],"content.vb":"<ExtensionAttribute>\nPublic Shared Sub WriteProperty(w As JsonWriter, name As String, value As Double)"},"File":"../Documentation~/api/LitJson.Extensions.Extensions.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonWriter","Summary":"<p sourcefile=\"../Documentation~/api/LitJson.JsonWriter.yml\" sourcestartlinenumber=\"2\">Stream-like facility to output JSON text.</p>\n","Type":"class","Syntax":{"content":"public class JsonWriter","content.vb":"Public Class JsonWriter"},"File":"../Documentation~/api/LitJson.JsonWriter.yml","Metadata":{},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonWriter.IndentValue","Type":"property","Syntax":{"content":"public int IndentValue { get; set; }","parameters":[],"return":{"type":"System.Int32"},"content.vb":"Public Property IndentValue As Integer"},"File":"../Documentation~/api/LitJson.JsonWriter.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonWriter.PrettyPrint","Type":"property","Syntax":{"content":"public bool PrettyPrint { get; set; }","parameters":[],"return":{"type":"System.Boolean"},"content.vb":"Public Property PrettyPrint As Boolean"},"File":"../Documentation~/api/LitJson.JsonWriter.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonWriter.Validate","Type":"property","Syntax":{"content":"public bool Validate { get; set; }","parameters":[],"return":{"type":"System.Boolean"},"content.vb":"Public Property Validate As Boolean"},"File":"../Documentation~/api/LitJson.JsonWriter.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonWriter.TypeHinting","Type":"property","Syntax":{"content":"public bool TypeHinting { get; set; }","parameters":[],"return":{"type":"System.Boolean"},"content.vb":"Public Property TypeHinting As Boolean"},"File":"../Documentation~/api/LitJson.JsonWriter.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonWriter.HintTypeName","Type":"property","Syntax":{"content":"public string HintTypeName { get; set; }","parameters":[],"return":{"type":"System.String"},"content.vb":"Public Property HintTypeName As String"},"File":"../Documentation~/api/LitJson.JsonWriter.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonWriter.HintValueName","Type":"property","Syntax":{"content":"public string HintValueName { get; set; }","parameters":[],"return":{"type":"System.String"},"content.vb":"Public Property HintValueName As String"},"File":"../Documentation~/api/LitJson.JsonWriter.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonWriter.TextWriter","Type":"property","Syntax":{"content":"public TextWriter TextWriter { get; }","parameters":[],"return":{"type":"System.IO.TextWriter"},"content.vb":"Public ReadOnly Property TextWriter As TextWriter"},"File":"../Documentation~/api/LitJson.JsonWriter.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonWriter.#ctor","Type":"constructor","Syntax":{"content":"public JsonWriter()","content.vb":"Public Sub New"},"File":"../Documentation~/api/LitJson.JsonWriter.yml","Metadata":{"type":"constructor","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonWriter.#ctor(System.Text.StringBuilder)","Type":"constructor","Syntax":{"content":"public JsonWriter(StringBuilder sb)","parameters":[{"id":"sb","type":"System.Text.StringBuilder"}],"content.vb":"Public Sub New(sb As StringBuilder)"},"File":"../Documentation~/api/LitJson.JsonWriter.yml","Metadata":{"type":"constructor","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonWriter.#ctor(System.IO.TextWriter)","Type":"constructor","Syntax":{"content":"public JsonWriter(TextWriter writer)","parameters":[{"id":"writer","type":"System.IO.TextWriter"}],"content.vb":"Public Sub New(writer As TextWriter)"},"File":"../Documentation~/api/LitJson.JsonWriter.yml","Metadata":{"type":"constructor","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonWriter.ToString","Type":"method","Syntax":{"content":"public override string ToString()","return":{"type":"System.String"},"content.vb":"Public Overrides Function ToString As String"},"File":"../Documentation~/api/LitJson.JsonWriter.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonWriter.Reset","Type":"method","Syntax":{"content":"public void Reset()","content.vb":"Public Sub Reset"},"File":"../Documentation~/api/LitJson.JsonWriter.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonWriter.Write(System.Boolean)","Type":"method","Syntax":{"content":"public void Write(bool boolean)","parameters":[{"id":"boolean","type":"System.Boolean"}],"content.vb":"Public Sub Write(boolean As Boolean)"},"File":"../Documentation~/api/LitJson.JsonWriter.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonWriter.Write(System.Double)","Type":"method","Syntax":{"content":"public void Write(double number)","parameters":[{"id":"number","type":"System.Double"}],"content.vb":"Public Sub Write(number As Double)"},"File":"../Documentation~/api/LitJson.JsonWriter.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonWriter.Write(System.Decimal)","Type":"method","Syntax":{"content":"public void Write(decimal number)","parameters":[{"id":"number","type":"System.Decimal"}],"content.vb":"Public Sub Write(number As Decimal)"},"File":"../Documentation~/api/LitJson.JsonWriter.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonWriter.Write(System.Int64)","Type":"method","Syntax":{"content":"public void Write(long number)","parameters":[{"id":"number","type":"System.Int64"}],"content.vb":"Public Sub Write(number As Long)"},"File":"../Documentation~/api/LitJson.JsonWriter.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonWriter.Write(System.UInt64)","Type":"method","Syntax":{"content":"public void Write(ulong number)","parameters":[{"id":"number","type":"System.UInt64"}],"content.vb":"Public Sub Write(number As ULong)"},"File":"../Documentation~/api/LitJson.JsonWriter.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonWriter.Write(System.String)","Type":"method","Syntax":{"content":"public void Write(string str)","parameters":[{"id":"str","type":"System.String"}],"content.vb":"Public Sub Write(str As String)"},"File":"../Documentation~/api/LitJson.JsonWriter.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonWriter.WriteArrayEnd","Type":"method","Syntax":{"content":"public void WriteArrayEnd()","content.vb":"Public Sub WriteArrayEnd"},"File":"../Documentation~/api/LitJson.JsonWriter.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonWriter.WriteArrayStart","Type":"method","Syntax":{"content":"public void WriteArrayStart()","content.vb":"Public Sub WriteArrayStart"},"File":"../Documentation~/api/LitJson.JsonWriter.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonWriter.WriteObjectEnd","Type":"method","Syntax":{"content":"public void WriteObjectEnd()","content.vb":"Public Sub WriteObjectEnd"},"File":"../Documentation~/api/LitJson.JsonWriter.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonWriter.WriteObjectStart","Type":"method","Syntax":{"content":"public void WriteObjectStart()","content.vb":"Public Sub WriteObjectStart"},"File":"../Documentation~/api/LitJson.JsonWriter.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonWriter.WritePropertyName(System.String)","Type":"method","Syntax":{"content":"public void WritePropertyName(string name)","parameters":[{"id":"name","type":"System.String"}],"content.vb":"Public Sub WritePropertyName(name As String)"},"File":"../Documentation~/api/LitJson.JsonWriter.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonType","Summary":"<p sourcefile=\"../Documentation~/api/LitJson.JsonType.yml\" sourcestartlinenumber=\"2\">This enum contains the possible types a JSON value can have.</p>\n","Type":"enum","Syntax":{"content":"public enum JsonType","content.vb":"Public Enum JsonType"},"File":"../Documentation~/api/LitJson.JsonType.yml","Metadata":{},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonType.None","Type":"field","Syntax":{"content":"None = 0","return":{"type":"LitJson.JsonType"}},"File":"../Documentation~/api/LitJson.JsonType.yml","Metadata":{"type":"field","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonType.Object","Type":"field","Syntax":{"content":"Object = 1","return":{"type":"LitJson.JsonType"}},"File":"../Documentation~/api/LitJson.JsonType.yml","Metadata":{"type":"field","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonType.Array","Type":"field","Syntax":{"content":"Array = 2","return":{"type":"LitJson.JsonType"}},"File":"../Documentation~/api/LitJson.JsonType.yml","Metadata":{"type":"field","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonType.String","Type":"field","Syntax":{"content":"String = 3","return":{"type":"LitJson.JsonType"}},"File":"../Documentation~/api/LitJson.JsonType.yml","Metadata":{"type":"field","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonType.Natural","Type":"field","Syntax":{"content":"Natural = 4","return":{"type":"LitJson.JsonType"}},"File":"../Documentation~/api/LitJson.JsonType.yml","Metadata":{"type":"field","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonType.Real","Type":"field","Syntax":{"content":"Real = 5","return":{"type":"LitJson.JsonType"}},"File":"../Documentation~/api/LitJson.JsonType.yml","Metadata":{"type":"field","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonType.Boolean","Type":"field","Syntax":{"content":"Boolean = 6","return":{"type":"LitJson.JsonType"}},"File":"../Documentation~/api/LitJson.JsonType.yml","Metadata":{"type":"field","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonIgnoreWhen","Type":"enum","Syntax":{"content":"[Flags]\npublic enum JsonIgnoreWhen","content.vb":"<Flags>\nPublic Enum JsonIgnoreWhen"},"File":"../Documentation~/api/LitJson.JsonIgnoreWhen.yml","Metadata":{},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonIgnoreWhen.Never","Type":"field","Syntax":{"content":"Never = 0","return":{"type":"LitJson.JsonIgnoreWhen"}},"File":"../Documentation~/api/LitJson.JsonIgnoreWhen.yml","Metadata":{"type":"field","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonIgnoreWhen.Serializing","Type":"field","Syntax":{"content":"Serializing = 1","return":{"type":"LitJson.JsonIgnoreWhen"}},"File":"../Documentation~/api/LitJson.JsonIgnoreWhen.yml","Metadata":{"type":"field","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonIgnoreWhen.Deserializing","Type":"field","Syntax":{"content":"Deserializing = 2","return":{"type":"LitJson.JsonIgnoreWhen"}},"File":"../Documentation~/api/LitJson.JsonIgnoreWhen.yml","Metadata":{"type":"field","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.ExporterFunc`1","Type":"delegate","Syntax":{"content":"public delegate void ExporterFunc<T>(T obj, JsonWriter writer);","parameters":[{"id":"obj","type":"{T}"},{"id":"writer","type":"LitJson.JsonWriter"}],"typeParameters":[{"id":"T"}],"content.vb":"Public Delegate Sub ExporterFunc(Of T)(obj As T, writer As JsonWriter)"},"File":"../Documentation~/api/LitJson.ExporterFunc-1.yml","Metadata":{},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonReader","Summary":"<p sourcefile=\"../Documentation~/api/LitJson.JsonReader.yml\" sourcestartlinenumber=\"2\">Stream-like access to JSON text.</p>\n","Type":"class","Syntax":{"content":"public class JsonReader","content.vb":"Public Class JsonReader"},"File":"../Documentation~/api/LitJson.JsonReader.yml","Metadata":{},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonReader.AllowComments","Type":"property","Syntax":{"content":"public bool AllowComments { get; set; }","parameters":[],"return":{"type":"System.Boolean"},"content.vb":"Public Property AllowComments As Boolean"},"File":"../Documentation~/api/LitJson.JsonReader.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonReader.AllowSingleQuotedStrings","Type":"property","Syntax":{"content":"public bool AllowSingleQuotedStrings { get; set; }","parameters":[],"return":{"type":"System.Boolean"},"content.vb":"Public Property AllowSingleQuotedStrings As Boolean"},"File":"../Documentation~/api/LitJson.JsonReader.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonReader.SkipNonMembers","Type":"property","Syntax":{"content":"public bool SkipNonMembers { get; set; }","parameters":[],"return":{"type":"System.Boolean"},"content.vb":"Public Property SkipNonMembers As Boolean"},"File":"../Documentation~/api/LitJson.JsonReader.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonReader.TypeHinting","Type":"property","Syntax":{"content":"public bool TypeHinting { get; set; }","parameters":[],"return":{"type":"System.Boolean"},"content.vb":"Public Property TypeHinting As Boolean"},"File":"../Documentation~/api/LitJson.JsonReader.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonReader.HintTypeName","Type":"property","Syntax":{"content":"public string HintTypeName { get; set; }","parameters":[],"return":{"type":"System.String"},"content.vb":"Public Property HintTypeName As String"},"File":"../Documentation~/api/LitJson.JsonReader.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonReader.HintValueName","Type":"property","Syntax":{"content":"public string HintValueName { get; set; }","parameters":[],"return":{"type":"System.String"},"content.vb":"Public Property HintValueName As String"},"File":"../Documentation~/api/LitJson.JsonReader.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonReader.EndOfInput","Type":"property","Syntax":{"content":"public bool EndOfInput { get; }","parameters":[],"return":{"type":"System.Boolean"},"content.vb":"Public ReadOnly Property EndOfInput As Boolean"},"File":"../Documentation~/api/LitJson.JsonReader.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonReader.EndOfJson","Type":"property","Syntax":{"content":"public bool EndOfJson { get; }","parameters":[],"return":{"type":"System.Boolean"},"content.vb":"Public ReadOnly Property EndOfJson As Boolean"},"File":"../Documentation~/api/LitJson.JsonReader.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonReader.Token","Type":"property","Syntax":{"content":"public JsonToken Token { get; }","parameters":[],"return":{"type":"LitJson.JsonToken"},"content.vb":"Public ReadOnly Property Token As JsonToken"},"File":"../Documentation~/api/LitJson.JsonReader.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonReader.Value","Type":"property","Syntax":{"content":"public object Value { get; }","parameters":[],"return":{"type":"System.Object"},"content.vb":"Public ReadOnly Property Value As Object"},"File":"../Documentation~/api/LitJson.JsonReader.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonReader.#ctor(System.String)","Type":"constructor","Syntax":{"content":"public JsonReader(string json)","parameters":[{"id":"json","type":"System.String"}],"content.vb":"Public Sub New(json As String)"},"File":"../Documentation~/api/LitJson.JsonReader.yml","Metadata":{"type":"constructor","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonReader.#ctor(System.IO.TextReader)","Type":"constructor","Syntax":{"content":"public JsonReader(TextReader reader)","parameters":[{"id":"reader","type":"System.IO.TextReader"}],"content.vb":"Public Sub New(reader As TextReader)"},"File":"../Documentation~/api/LitJson.JsonReader.yml","Metadata":{"type":"constructor","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonReader.Close","Type":"method","Syntax":{"content":"public void Close()","content.vb":"Public Sub Close"},"File":"../Documentation~/api/LitJson.JsonReader.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonReader.Read","Type":"method","Syntax":{"content":"public bool Read()","return":{"type":"System.Boolean"},"content.vb":"Public Function Read As Boolean"},"File":"../Documentation~/api/LitJson.JsonReader.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.FactoryFunc`1","Type":"delegate","Syntax":{"content":"public delegate T FactoryFunc<T>();","typeParameters":[{"id":"T"}],"return":{"type":"{T}"},"content.vb":"Public Delegate Function FactoryFunc(Of T) As T"},"File":"../Documentation~/api/LitJson.FactoryFunc-1.yml","Metadata":{},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.ImporterFunc`2","Type":"delegate","Syntax":{"content":"public delegate TValue ImporterFunc<TJson, TValue>(TJson input);","parameters":[{"id":"input","type":"{TJson}"}],"typeParameters":[{"id":"TJson"},{"id":"TValue"}],"return":{"type":"{TValue}"},"content.vb":"Public Delegate Function ImporterFunc(Of TJson, TValue)(input As TJson) As TValue"},"File":"../Documentation~/api/LitJson.ImporterFunc-2.yml","Metadata":{},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.Extensions","Type":"namespace","File":"../Documentation~/api/LitJson.Extensions.yml","Metadata":{},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData","Summary":"<p sourcefile=\"../Documentation~/api/LitJson.JsonData.yml\" sourcestartlinenumber=\"2\">Generic type to hold JSON data (objects, arrays, and so on).\nThis isthe default type returned by JsonMapper.ToObject().</p>\n","Type":"class","Syntax":{"content":"public class JsonData : IJsonWrapper, IList, IOrderedDictionary, IDictionary, ICollection, IEnumerable, IEquatable<JsonData>","content.vb":"Public Class JsonData\n\n    Implements IJsonWrapper, IList, IOrderedDictionary, IDictionary, ICollection, IEnumerable, IEquatable(Of JsonData)"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.Count","Type":"property","Syntax":{"content":"public int Count { get; }","parameters":[],"return":{"type":"System.Int32"},"content.vb":"Public ReadOnly Property Count As Integer"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.IsArray","Type":"property","Syntax":{"content":"public bool IsArray { get; }","parameters":[],"return":{"type":"System.Boolean"},"content.vb":"Public ReadOnly Property IsArray As Boolean"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.IsBoolean","Type":"property","Syntax":{"content":"public bool IsBoolean { get; }","parameters":[],"return":{"type":"System.Boolean"},"content.vb":"Public ReadOnly Property IsBoolean As Boolean"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.IsReal","Type":"property","Syntax":{"content":"public bool IsReal { get; }","parameters":[],"return":{"type":"System.Boolean"},"content.vb":"Public ReadOnly Property IsReal As Boolean"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.IsNatural","Type":"property","Syntax":{"content":"public bool IsNatural { get; }","parameters":[],"return":{"type":"System.Boolean"},"content.vb":"Public ReadOnly Property IsNatural As Boolean"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.IsObject","Type":"property","Syntax":{"content":"public bool IsObject { get; }","parameters":[],"return":{"type":"System.Boolean"},"content.vb":"Public ReadOnly Property IsObject As Boolean"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.IsString","Type":"property","Syntax":{"content":"public bool IsString { get; }","parameters":[],"return":{"type":"System.Boolean"},"content.vb":"Public ReadOnly Property IsString As Boolean"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.Keys","Type":"property","Syntax":{"content":"public ICollection<string> Keys { get; }","parameters":[],"return":{"type":"System.Collections.Generic.ICollection{System.String}"},"content.vb":"Public ReadOnly Property Keys As ICollection(Of String)"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.System#Collections#ICollection#Count","Type":"property","Syntax":{"content":"int ICollection.Count { get; }","parameters":[],"return":{"type":"System.Int32"},"content.vb":"ReadOnly WriteOnly Property System.Collections.ICollection.Count As Integer Implements ICollection.Count"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.System#Collections#ICollection#IsSynchronized","Type":"property","Syntax":{"content":"bool ICollection.IsSynchronized { get; }","parameters":[],"return":{"type":"System.Boolean"},"content.vb":"ReadOnly WriteOnly Property System.Collections.ICollection.IsSynchronized As Boolean Implements ICollection.IsSynchronized"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.System#Collections#ICollection#SyncRoot","Type":"property","Syntax":{"content":"object ICollection.SyncRoot { get; }","parameters":[],"return":{"type":"System.Object"},"content.vb":"ReadOnly WriteOnly Property System.Collections.ICollection.SyncRoot As Object Implements ICollection.SyncRoot"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.System#Collections#IDictionary#IsFixedSize","Type":"property","Syntax":{"content":"bool IDictionary.IsFixedSize { get; }","parameters":[],"return":{"type":"System.Boolean"},"content.vb":"ReadOnly WriteOnly Property System.Collections.IDictionary.IsFixedSize As Boolean Implements IDictionary.IsFixedSize"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.System#Collections#IDictionary#IsReadOnly","Type":"property","Syntax":{"content":"bool IDictionary.IsReadOnly { get; }","parameters":[],"return":{"type":"System.Boolean"},"content.vb":"ReadOnly WriteOnly Property System.Collections.IDictionary.IsReadOnly As Boolean Implements IDictionary.IsReadOnly"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.System#Collections#IDictionary#Keys","Type":"property","Syntax":{"content":"ICollection IDictionary.Keys { get; }","parameters":[],"return":{"type":"System.Collections.ICollection"},"content.vb":"ReadOnly WriteOnly Property System.Collections.IDictionary.Keys As ICollection Implements IDictionary.Keys"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.System#Collections#IDictionary#Values","Type":"property","Syntax":{"content":"ICollection IDictionary.Values { get; }","parameters":[],"return":{"type":"System.Collections.ICollection"},"content.vb":"ReadOnly WriteOnly Property System.Collections.IDictionary.Values As ICollection Implements IDictionary.Values"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.System#Collections#IList#IsFixedSize","Type":"property","Syntax":{"content":"bool IList.IsFixedSize { get; }","parameters":[],"return":{"type":"System.Boolean"},"content.vb":"ReadOnly WriteOnly Property System.Collections.IList.IsFixedSize As Boolean Implements IList.IsFixedSize"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.System#Collections#IList#IsReadOnly","Type":"property","Syntax":{"content":"bool IList.IsReadOnly { get; }","parameters":[],"return":{"type":"System.Boolean"},"content.vb":"ReadOnly WriteOnly Property System.Collections.IList.IsReadOnly As Boolean Implements IList.IsReadOnly"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.System#Collections#IDictionary#Item(System.Object)","Type":"property","Syntax":{"content":"object IDictionary.this[object key] { get; set; }","parameters":[{"id":"key","type":"System.Object"}],"return":{"type":"System.Object"},"content.vb":"ReadOnly WriteOnly Property System.Collections.IDictionary.Item(key As Object) As Object Implements IDictionary.this[]"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.System#Collections#Specialized#IOrderedDictionary#Item(System.Int32)","Type":"property","Syntax":{"content":"object IOrderedDictionary.this[int idx] { get; set; }","parameters":[{"id":"idx","type":"System.Int32"}],"return":{"type":"System.Object"},"content.vb":"ReadOnly WriteOnly Property System.Collections.Specialized.IOrderedDictionary.Item(idx As Integer) As Object Implements IOrderedDictionary.this[]"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.System#Collections#IList#Item(System.Int32)","Type":"property","Syntax":{"content":"object IList.this[int index] { get; set; }","parameters":[{"id":"index","type":"System.Int32"}],"return":{"type":"System.Object"},"content.vb":"ReadOnly WriteOnly Property System.Collections.IList.Item(index As Integer) As Object Implements IList.this[]"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.Item(System.String)","Type":"property","Syntax":{"content":"public JsonData this[string name] { get; set; }","parameters":[{"id":"name","type":"System.String"}],"return":{"type":"LitJson.JsonData"},"content.vb":"Public Property Item(name As String) As JsonData"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.Item(System.Int32)","Type":"property","Syntax":{"content":"public JsonData this[int index] { get; set; }","parameters":[{"id":"index","type":"System.Int32"}],"return":{"type":"LitJson.JsonData"},"content.vb":"Public Property Item(index As Integer) As JsonData"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.#ctor(System.Boolean)","Type":"constructor","Syntax":{"content":"public JsonData(bool boolean)","parameters":[{"id":"boolean","type":"System.Boolean"}],"content.vb":"Public Sub New(boolean As Boolean)"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"constructor","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.#ctor(System.Double)","Type":"constructor","Syntax":{"content":"public JsonData(double number)","parameters":[{"id":"number","type":"System.Double"}],"content.vb":"Public Sub New(number As Double)"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"constructor","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.#ctor(System.Int64)","Type":"constructor","Syntax":{"content":"public JsonData(long number)","parameters":[{"id":"number","type":"System.Int64"}],"content.vb":"Public Sub New(number As Long)"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"constructor","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.#ctor(System.String)","Type":"constructor","Syntax":{"content":"public JsonData(string str)","parameters":[{"id":"str","type":"System.String"}],"content.vb":"Public Sub New(str As String)"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"constructor","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.#ctor(System.Object)","Type":"constructor","Syntax":{"content":"public JsonData(object obj)","parameters":[{"id":"obj","type":"System.Object"}],"content.vb":"Public Sub New(obj As Object)"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"constructor","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.#ctor","Type":"constructor","Syntax":{"content":"public JsonData()","content.vb":"Public Sub New"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"constructor","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.#ctor(System.SByte)","Type":"constructor","Syntax":{"content":"public JsonData(sbyte number)","parameters":[{"id":"number","type":"System.SByte"}],"content.vb":"Public Sub New(number As SByte)"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"constructor","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.#ctor(System.Byte)","Type":"constructor","Syntax":{"content":"public JsonData(byte number)","parameters":[{"id":"number","type":"System.Byte"}],"content.vb":"Public Sub New(number As Byte)"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"constructor","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.#ctor(System.Int16)","Type":"constructor","Syntax":{"content":"public JsonData(short number)","parameters":[{"id":"number","type":"System.Int16"}],"content.vb":"Public Sub New(number As Short)"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"constructor","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.#ctor(System.UInt16)","Type":"constructor","Syntax":{"content":"public JsonData(ushort number)","parameters":[{"id":"number","type":"System.UInt16"}],"content.vb":"Public Sub New(number As UShort)"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"constructor","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.#ctor(System.Int32)","Type":"constructor","Syntax":{"content":"public JsonData(int number)","parameters":[{"id":"number","type":"System.Int32"}],"content.vb":"Public Sub New(number As Integer)"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"constructor","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.#ctor(System.UInt32)","Type":"constructor","Syntax":{"content":"public JsonData(uint number)","parameters":[{"id":"number","type":"System.UInt32"}],"content.vb":"Public Sub New(number As UInteger)"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"constructor","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.#ctor(System.UInt64)","Type":"constructor","Syntax":{"content":"public JsonData(ulong number)","parameters":[{"id":"number","type":"System.UInt64"}],"content.vb":"Public Sub New(number As ULong)"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"constructor","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.#ctor(System.Single)","Type":"constructor","Syntax":{"content":"public JsonData(float number)","parameters":[{"id":"number","type":"System.Single"}],"content.vb":"Public Sub New(number As Single)"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"constructor","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.#ctor(System.Decimal)","Type":"constructor","Syntax":{"content":"public JsonData(decimal number)","parameters":[{"id":"number","type":"System.Decimal"}],"content.vb":"Public Sub New(number As Decimal)"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"constructor","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.op_Implicit(System.Boolean)~LitJson.JsonData","Type":"operator","Syntax":{"content":"public static implicit operator JsonData(bool data)","parameters":[{"id":"data","type":"System.Boolean"}],"return":{"type":"LitJson.JsonData"},"content.vb":"Public Shared Widening Operator CType(data As Boolean) As JsonData"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"operator","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.op_Implicit(System.Double)~LitJson.JsonData","Type":"operator","Syntax":{"content":"public static implicit operator JsonData(double data)","parameters":[{"id":"data","type":"System.Double"}],"return":{"type":"LitJson.JsonData"},"content.vb":"Public Shared Widening Operator CType(data As Double) As JsonData"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"operator","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.op_Implicit(System.Int64)~LitJson.JsonData","Type":"operator","Syntax":{"content":"public static implicit operator JsonData(long data)","parameters":[{"id":"data","type":"System.Int64"}],"return":{"type":"LitJson.JsonData"},"content.vb":"Public Shared Widening Operator CType(data As Long) As JsonData"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"operator","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.op_Implicit(System.String)~LitJson.JsonData","Type":"operator","Syntax":{"content":"public static implicit operator JsonData(string data)","parameters":[{"id":"data","type":"System.String"}],"return":{"type":"LitJson.JsonData"},"content.vb":"Public Shared Widening Operator CType(data As String) As JsonData"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"operator","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.op_Explicit(LitJson.JsonData)~System.Boolean","Type":"operator","Syntax":{"content":"public static explicit operator bool (JsonData data)","parameters":[{"id":"data","type":"LitJson.JsonData"}],"return":{"type":"System.Boolean"},"content.vb":"Public Shared Narrowing Operator CType(data As JsonData) As Boolean"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"operator","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.op_Explicit(LitJson.JsonData)~System.Single","Type":"operator","Syntax":{"content":"public static explicit operator float (JsonData data)","parameters":[{"id":"data","type":"LitJson.JsonData"}],"return":{"type":"System.Single"},"content.vb":"Public Shared Narrowing Operator CType(data As JsonData) As Single"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"operator","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.op_Explicit(LitJson.JsonData)~System.Double","Type":"operator","Syntax":{"content":"public static explicit operator double (JsonData data)","parameters":[{"id":"data","type":"LitJson.JsonData"}],"return":{"type":"System.Double"},"content.vb":"Public Shared Narrowing Operator CType(data As JsonData) As Double"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"operator","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.op_Explicit(LitJson.JsonData)~System.Decimal","Type":"operator","Syntax":{"content":"public static explicit operator decimal (JsonData data)","parameters":[{"id":"data","type":"LitJson.JsonData"}],"return":{"type":"System.Decimal"},"content.vb":"Public Shared Narrowing Operator CType(data As JsonData) As Decimal"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"operator","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.op_Explicit(LitJson.JsonData)~System.SByte","Type":"operator","Syntax":{"content":"public static explicit operator sbyte (JsonData data)","parameters":[{"id":"data","type":"LitJson.JsonData"}],"return":{"type":"System.SByte"},"content.vb":"Public Shared Narrowing Operator CType(data As JsonData) As SByte"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"operator","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.op_Explicit(LitJson.JsonData)~System.Byte","Type":"operator","Syntax":{"content":"public static explicit operator byte (JsonData data)","parameters":[{"id":"data","type":"LitJson.JsonData"}],"return":{"type":"System.Byte"},"content.vb":"Public Shared Narrowing Operator CType(data As JsonData) As Byte"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"operator","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.op_Explicit(LitJson.JsonData)~System.Int16","Type":"operator","Syntax":{"content":"public static explicit operator short (JsonData data)","parameters":[{"id":"data","type":"LitJson.JsonData"}],"return":{"type":"System.Int16"},"content.vb":"Public Shared Narrowing Operator CType(data As JsonData) As Short"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"operator","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.op_Explicit(LitJson.JsonData)~System.UInt16","Type":"operator","Syntax":{"content":"public static explicit operator ushort (JsonData data)","parameters":[{"id":"data","type":"LitJson.JsonData"}],"return":{"type":"System.UInt16"},"content.vb":"Public Shared Narrowing Operator CType(data As JsonData) As UShort"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"operator","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.op_Explicit(LitJson.JsonData)~System.Int32","Type":"operator","Syntax":{"content":"public static explicit operator int (JsonData data)","parameters":[{"id":"data","type":"LitJson.JsonData"}],"return":{"type":"System.Int32"},"content.vb":"Public Shared Narrowing Operator CType(data As JsonData) As Integer"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"operator","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.op_Explicit(LitJson.JsonData)~System.UInt32","Type":"operator","Syntax":{"content":"public static explicit operator uint (JsonData data)","parameters":[{"id":"data","type":"LitJson.JsonData"}],"return":{"type":"System.UInt32"},"content.vb":"Public Shared Narrowing Operator CType(data As JsonData) As UInteger"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"operator","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.op_Explicit(LitJson.JsonData)~System.Int64","Type":"operator","Syntax":{"content":"public static explicit operator long (JsonData data)","parameters":[{"id":"data","type":"LitJson.JsonData"}],"return":{"type":"System.Int64"},"content.vb":"Public Shared Narrowing Operator CType(data As JsonData) As Long"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"operator","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.op_Explicit(LitJson.JsonData)~System.UInt64","Type":"operator","Syntax":{"content":"public static explicit operator ulong (JsonData data)","parameters":[{"id":"data","type":"LitJson.JsonData"}],"return":{"type":"System.UInt64"},"content.vb":"Public Shared Narrowing Operator CType(data As JsonData) As ULong"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"operator","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.op_Explicit(LitJson.JsonData)~System.String","Type":"operator","Syntax":{"content":"public static explicit operator string (JsonData data)","parameters":[{"id":"data","type":"LitJson.JsonData"}],"return":{"type":"System.String"},"content.vb":"Public Shared Narrowing Operator CType(data As JsonData) As String"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"operator","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.System#Collections#ICollection#CopyTo(System.Array,System.Int32)","Type":"method","Syntax":{"content":"void ICollection.CopyTo(Array array, int index)","parameters":[{"id":"array","type":"System.Array"},{"id":"index","type":"System.Int32"}],"content.vb":"Sub System.Collections.ICollection.CopyTo(array As Array, index As Integer) Implements ICollection.CopyTo"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.System#Collections#IDictionary#Add(System.Object,System.Object)","Type":"method","Syntax":{"content":"void IDictionary.Add(object key, object value)","parameters":[{"id":"key","type":"System.Object"},{"id":"value","type":"System.Object"}],"content.vb":"Sub System.Collections.IDictionary.Add(key As Object, value As Object) Implements IDictionary.Add"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.System#Collections#IDictionary#Clear","Type":"method","Syntax":{"content":"void IDictionary.Clear()","content.vb":"Sub System.Collections.IDictionary.Clear Implements IDictionary.Clear"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.System#Collections#IDictionary#Contains(System.Object)","Type":"method","Syntax":{"content":"bool IDictionary.Contains(object key)","parameters":[{"id":"key","type":"System.Object"}],"return":{"type":"System.Boolean"},"content.vb":"Function System.Collections.IDictionary.Contains(key As Object) As Boolean Implements IDictionary.Contains"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.System#Collections#IDictionary#GetEnumerator","Type":"method","Syntax":{"content":"IDictionaryEnumerator IDictionary.GetEnumerator()","return":{"type":"System.Collections.IDictionaryEnumerator"},"content.vb":"Function System.Collections.IDictionary.GetEnumerator As IDictionaryEnumerator Implements IDictionary.GetEnumerator"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.System#Collections#IDictionary#Remove(System.Object)","Type":"method","Syntax":{"content":"void IDictionary.Remove(object key)","parameters":[{"id":"key","type":"System.Object"}],"content.vb":"Sub System.Collections.IDictionary.Remove(key As Object) Implements IDictionary.Remove"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.System#Collections#IEnumerable#GetEnumerator","Type":"method","Syntax":{"content":"IEnumerator IEnumerable.GetEnumerator()","return":{"type":"System.Collections.IEnumerator"},"content.vb":"Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.GetBoolean","Type":"method","Syntax":{"content":"public bool GetBoolean()","return":{"type":"System.Boolean"},"content.vb":"Public Function GetBoolean As Boolean"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.GetReal","Type":"method","Syntax":{"content":"public double GetReal()","return":{"type":"System.Double"},"content.vb":"Public Function GetReal As Double"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.GetNatural","Type":"method","Syntax":{"content":"public long GetNatural()","return":{"type":"System.Int64"},"content.vb":"Public Function GetNatural As Long"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.GetString","Type":"method","Syntax":{"content":"public string GetString()","return":{"type":"System.String"},"content.vb":"Public Function GetString As String"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.SetBoolean(System.Boolean)","Type":"method","Syntax":{"content":"public void SetBoolean(bool val)","parameters":[{"id":"val","type":"System.Boolean"}],"content.vb":"Public Sub SetBoolean(val As Boolean)"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.SetReal(System.Double)","Type":"method","Syntax":{"content":"public void SetReal(double val)","parameters":[{"id":"val","type":"System.Double"}],"content.vb":"Public Sub SetReal(val As Double)"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.SetNatural(System.Int64)","Type":"method","Syntax":{"content":"public void SetNatural(long val)","parameters":[{"id":"val","type":"System.Int64"}],"content.vb":"Public Sub SetNatural(val As Long)"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.SetString(System.String)","Type":"method","Syntax":{"content":"public void SetString(string val)","parameters":[{"id":"val","type":"System.String"}],"content.vb":"Public Sub SetString(val As String)"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.LitJson#IJsonWrapper#ToJson(LitJson.JsonWriter)","Type":"method","Syntax":{"content":"void IJsonWrapper.ToJson(JsonWriter writer)","parameters":[{"id":"writer","type":"LitJson.JsonWriter"}],"content.vb":"Sub LitJson.IJsonWrapper.ToJson(writer As JsonWriter) Implements IJsonWrapper.ToJson"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.System#Collections#IList#Add(System.Object)","Type":"method","Syntax":{"content":"int IList.Add(object value)","parameters":[{"id":"value","type":"System.Object"}],"return":{"type":"System.Int32"},"content.vb":"Function System.Collections.IList.Add(value As Object) As Integer Implements IList.Add"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.System#Collections#IList#Clear","Type":"method","Syntax":{"content":"void IList.Clear()","content.vb":"Sub System.Collections.IList.Clear Implements IList.Clear"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.System#Collections#IList#Contains(System.Object)","Type":"method","Syntax":{"content":"bool IList.Contains(object value)","parameters":[{"id":"value","type":"System.Object"}],"return":{"type":"System.Boolean"},"content.vb":"Function System.Collections.IList.Contains(value As Object) As Boolean Implements IList.Contains"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.System#Collections#IList#IndexOf(System.Object)","Type":"method","Syntax":{"content":"int IList.IndexOf(object value)","parameters":[{"id":"value","type":"System.Object"}],"return":{"type":"System.Int32"},"content.vb":"Function System.Collections.IList.IndexOf(value As Object) As Integer Implements IList.IndexOf"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.System#Collections#IList#Insert(System.Int32,System.Object)","Type":"method","Syntax":{"content":"void IList.Insert(int index, object value)","parameters":[{"id":"index","type":"System.Int32"},{"id":"value","type":"System.Object"}],"content.vb":"Sub System.Collections.IList.Insert(index As Integer, value As Object) Implements IList.Insert"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.System#Collections#IList#Remove(System.Object)","Type":"method","Syntax":{"content":"void IList.Remove(object value)","parameters":[{"id":"value","type":"System.Object"}],"content.vb":"Sub System.Collections.IList.Remove(value As Object) Implements IList.Remove"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.System#Collections#IList#RemoveAt(System.Int32)","Type":"method","Syntax":{"content":"void IList.RemoveAt(int index)","parameters":[{"id":"index","type":"System.Int32"}],"content.vb":"Sub System.Collections.IList.RemoveAt(index As Integer) Implements IList.RemoveAt"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.System#Collections#Specialized#IOrderedDictionary#GetEnumerator","Type":"method","Syntax":{"content":"IDictionaryEnumerator IOrderedDictionary.GetEnumerator()","return":{"type":"System.Collections.IDictionaryEnumerator"},"content.vb":"Function System.Collections.Specialized.IOrderedDictionary.GetEnumerator As IDictionaryEnumerator Implements IOrderedDictionary.GetEnumerator"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.System#Collections#Specialized#IOrderedDictionary#Insert(System.Int32,System.Object,System.Object)","Type":"method","Syntax":{"content":"void IOrderedDictionary.Insert(int idx, object key, object value)","parameters":[{"id":"idx","type":"System.Int32"},{"id":"key","type":"System.Object"},{"id":"value","type":"System.Object"}],"content.vb":"Sub System.Collections.Specialized.IOrderedDictionary.Insert(idx As Integer, key As Object, value As Object) Implements IOrderedDictionary.Insert"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.System#Collections#Specialized#IOrderedDictionary#RemoveAt(System.Int32)","Type":"method","Syntax":{"content":"void IOrderedDictionary.RemoveAt(int idx)","parameters":[{"id":"idx","type":"System.Int32"}],"content.vb":"Sub System.Collections.Specialized.IOrderedDictionary.RemoveAt(idx As Integer) Implements IOrderedDictionary.RemoveAt"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.Add(System.Object)","Type":"method","Syntax":{"content":"public int Add(object value)","parameters":[{"id":"value","type":"System.Object"}],"return":{"type":"System.Int32"},"content.vb":"Public Function Add(value As Object) As Integer"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.Clear","Type":"method","Syntax":{"content":"public void Clear()","content.vb":"Public Sub Clear"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.Equals(LitJson.JsonData)","Type":"method","Syntax":{"content":"public bool Equals(JsonData data)","parameters":[{"id":"data","type":"LitJson.JsonData"}],"return":{"type":"System.Boolean"},"content.vb":"Public Function Equals(data As JsonData) As Boolean"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.Equals(System.Object)","Type":"method","Syntax":{"content":"public override bool Equals(object obj)","parameters":[{"id":"obj","type":"System.Object"}],"return":{"type":"System.Boolean"},"content.vb":"Public Overrides Function Equals(obj As Object) As Boolean"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.GetHashCode","Type":"method","Syntax":{"content":"public override int GetHashCode()","return":{"type":"System.Int32"},"content.vb":"Public Overrides Function GetHashCode As Integer"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.GetJsonType","Type":"method","Syntax":{"content":"public JsonType GetJsonType()","return":{"type":"LitJson.JsonType"},"content.vb":"Public Function GetJsonType As JsonType"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.SetJsonType(LitJson.JsonType)","Type":"method","Syntax":{"content":"public void SetJsonType(JsonType type)","parameters":[{"id":"type","type":"LitJson.JsonType"}],"content.vb":"Public Sub SetJsonType(type As JsonType)"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.ToJson","Type":"method","Syntax":{"content":"public string ToJson()","return":{"type":"System.String"},"content.vb":"Public Function ToJson As String"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.ToJson(LitJson.JsonWriter)","Type":"method","Syntax":{"content":"public void ToJson(JsonWriter writer)","parameters":[{"id":"writer","type":"LitJson.JsonWriter"}],"content.vb":"Public Sub ToJson(writer As JsonWriter)"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonData.ToString","Type":"method","Syntax":{"content":"public override string ToString()","return":{"type":"System.String"},"content.vb":"Public Overrides Function ToString As String"},"File":"../Documentation~/api/LitJson.JsonData.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonMockWrapper","Summary":"<p sourcefile=\"../Documentation~/api/LitJson.JsonMockWrapper.yml\" sourcestartlinenumber=\"2\">Mock object implementing IJsonWrapper, to facilitate actions like skipping data more efficiently.</p>\n","Type":"class","Syntax":{"content":"public class JsonMockWrapper : IJsonWrapper, IList, IOrderedDictionary, IDictionary, ICollection, IEnumerable","content.vb":"Public Class JsonMockWrapper\n\n    Implements IJsonWrapper, IList, IOrderedDictionary, IDictionary, ICollection, IEnumerable"},"File":"../Documentation~/api/LitJson.JsonMockWrapper.yml","Metadata":{},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonMockWrapper.IsArray","Type":"property","Syntax":{"content":"public bool IsArray { get; }","parameters":[],"return":{"type":"System.Boolean"},"content.vb":"Public ReadOnly Property IsArray As Boolean"},"File":"../Documentation~/api/LitJson.JsonMockWrapper.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonMockWrapper.IsBoolean","Type":"property","Syntax":{"content":"public bool IsBoolean { get; }","parameters":[],"return":{"type":"System.Boolean"},"content.vb":"Public ReadOnly Property IsBoolean As Boolean"},"File":"../Documentation~/api/LitJson.JsonMockWrapper.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonMockWrapper.IsReal","Type":"property","Syntax":{"content":"public bool IsReal { get; }","parameters":[],"return":{"type":"System.Boolean"},"content.vb":"Public ReadOnly Property IsReal As Boolean"},"File":"../Documentation~/api/LitJson.JsonMockWrapper.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonMockWrapper.IsNatural","Type":"property","Syntax":{"content":"public bool IsNatural { get; }","parameters":[],"return":{"type":"System.Boolean"},"content.vb":"Public ReadOnly Property IsNatural As Boolean"},"File":"../Documentation~/api/LitJson.JsonMockWrapper.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonMockWrapper.IsObject","Type":"property","Syntax":{"content":"public bool IsObject { get; }","parameters":[],"return":{"type":"System.Boolean"},"content.vb":"Public ReadOnly Property IsObject As Boolean"},"File":"../Documentation~/api/LitJson.JsonMockWrapper.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonMockWrapper.IsString","Type":"property","Syntax":{"content":"public bool IsString { get; }","parameters":[],"return":{"type":"System.Boolean"},"content.vb":"Public ReadOnly Property IsString As Boolean"},"File":"../Documentation~/api/LitJson.JsonMockWrapper.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonMockWrapper.GetBoolean","Type":"method","Syntax":{"content":"public bool GetBoolean()","return":{"type":"System.Boolean"},"content.vb":"Public Function GetBoolean As Boolean"},"File":"../Documentation~/api/LitJson.JsonMockWrapper.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonMockWrapper.GetReal","Type":"method","Syntax":{"content":"public double GetReal()","return":{"type":"System.Double"},"content.vb":"Public Function GetReal As Double"},"File":"../Documentation~/api/LitJson.JsonMockWrapper.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonMockWrapper.GetNatural","Type":"method","Syntax":{"content":"public long GetNatural()","return":{"type":"System.Int64"},"content.vb":"Public Function GetNatural As Long"},"File":"../Documentation~/api/LitJson.JsonMockWrapper.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonMockWrapper.GetJsonType","Type":"method","Syntax":{"content":"public JsonType GetJsonType()","return":{"type":"LitJson.JsonType"},"content.vb":"Public Function GetJsonType As JsonType"},"File":"../Documentation~/api/LitJson.JsonMockWrapper.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonMockWrapper.GetString","Type":"method","Syntax":{"content":"public string GetString()","return":{"type":"System.String"},"content.vb":"Public Function GetString As String"},"File":"../Documentation~/api/LitJson.JsonMockWrapper.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonMockWrapper.SetBoolean(System.Boolean)","Type":"method","Syntax":{"content":"public void SetBoolean(bool val)","parameters":[{"id":"val","type":"System.Boolean"}],"content.vb":"Public Sub SetBoolean(val As Boolean)"},"File":"../Documentation~/api/LitJson.JsonMockWrapper.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonMockWrapper.SetReal(System.Double)","Type":"method","Syntax":{"content":"public void SetReal(double val)","parameters":[{"id":"val","type":"System.Double"}],"content.vb":"Public Sub SetReal(val As Double)"},"File":"../Documentation~/api/LitJson.JsonMockWrapper.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonMockWrapper.SetNatural(System.Int64)","Type":"method","Syntax":{"content":"public void SetNatural(long val)","parameters":[{"id":"val","type":"System.Int64"}],"content.vb":"Public Sub SetNatural(val As Long)"},"File":"../Documentation~/api/LitJson.JsonMockWrapper.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonMockWrapper.SetJsonType(LitJson.JsonType)","Type":"method","Syntax":{"content":"public void SetJsonType(JsonType type)","parameters":[{"id":"type","type":"LitJson.JsonType"}],"content.vb":"Public Sub SetJsonType(type As JsonType)"},"File":"../Documentation~/api/LitJson.JsonMockWrapper.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonMockWrapper.SetString(System.String)","Type":"method","Syntax":{"content":"public void SetString(string val)","parameters":[{"id":"val","type":"System.String"}],"content.vb":"Public Sub SetString(val As String)"},"File":"../Documentation~/api/LitJson.JsonMockWrapper.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonMockWrapper.ToJson","Type":"method","Syntax":{"content":"public string ToJson()","return":{"type":"System.String"},"content.vb":"Public Function ToJson As String"},"File":"../Documentation~/api/LitJson.JsonMockWrapper.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonMockWrapper.ToJson(LitJson.JsonWriter)","Type":"method","Syntax":{"content":"public void ToJson(JsonWriter writer)","parameters":[{"id":"writer","type":"LitJson.JsonWriter"}],"content.vb":"Public Sub ToJson(writer As JsonWriter)"},"File":"../Documentation~/api/LitJson.JsonMockWrapper.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonMockWrapper.System#Collections#IList#IsFixedSize","Type":"property","Syntax":{"content":"bool IList.IsFixedSize { get; }","parameters":[],"return":{"type":"System.Boolean"},"content.vb":"ReadOnly WriteOnly Property System.Collections.IList.IsFixedSize As Boolean Implements IList.IsFixedSize"},"File":"../Documentation~/api/LitJson.JsonMockWrapper.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonMockWrapper.System#Collections#IList#IsReadOnly","Type":"property","Syntax":{"content":"bool IList.IsReadOnly { get; }","parameters":[],"return":{"type":"System.Boolean"},"content.vb":"ReadOnly WriteOnly Property System.Collections.IList.IsReadOnly As Boolean Implements IList.IsReadOnly"},"File":"../Documentation~/api/LitJson.JsonMockWrapper.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonMockWrapper.System#Collections#IList#Item(System.Int32)","Type":"property","Syntax":{"content":"object IList.this[int index] { get; set; }","parameters":[{"id":"index","type":"System.Int32"}],"return":{"type":"System.Object"},"content.vb":"ReadOnly WriteOnly Property System.Collections.IList.Item(index As Integer) As Object Implements IList.this[]"},"File":"../Documentation~/api/LitJson.JsonMockWrapper.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonMockWrapper.System#Collections#IList#Add(System.Object)","Type":"method","Syntax":{"content":"int IList.Add(object value)","parameters":[{"id":"value","type":"System.Object"}],"return":{"type":"System.Int32"},"content.vb":"Function System.Collections.IList.Add(value As Object) As Integer Implements IList.Add"},"File":"../Documentation~/api/LitJson.JsonMockWrapper.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonMockWrapper.System#Collections#IList#Clear","Type":"method","Syntax":{"content":"void IList.Clear()","content.vb":"Sub System.Collections.IList.Clear Implements IList.Clear"},"File":"../Documentation~/api/LitJson.JsonMockWrapper.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonMockWrapper.System#Collections#IList#Contains(System.Object)","Type":"method","Syntax":{"content":"bool IList.Contains(object value)","parameters":[{"id":"value","type":"System.Object"}],"return":{"type":"System.Boolean"},"content.vb":"Function System.Collections.IList.Contains(value As Object) As Boolean Implements IList.Contains"},"File":"../Documentation~/api/LitJson.JsonMockWrapper.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonMockWrapper.System#Collections#IList#IndexOf(System.Object)","Type":"method","Syntax":{"content":"int IList.IndexOf(object value)","parameters":[{"id":"value","type":"System.Object"}],"return":{"type":"System.Int32"},"content.vb":"Function System.Collections.IList.IndexOf(value As Object) As Integer Implements IList.IndexOf"},"File":"../Documentation~/api/LitJson.JsonMockWrapper.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonMockWrapper.System#Collections#IList#Insert(System.Int32,System.Object)","Type":"method","Syntax":{"content":"void IList.Insert(int i, object v)","parameters":[{"id":"i","type":"System.Int32"},{"id":"v","type":"System.Object"}],"content.vb":"Sub System.Collections.IList.Insert(i As Integer, v As Object) Implements IList.Insert"},"File":"../Documentation~/api/LitJson.JsonMockWrapper.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonMockWrapper.System#Collections#IList#Remove(System.Object)","Type":"method","Syntax":{"content":"void IList.Remove(object value)","parameters":[{"id":"value","type":"System.Object"}],"content.vb":"Sub System.Collections.IList.Remove(value As Object) Implements IList.Remove"},"File":"../Documentation~/api/LitJson.JsonMockWrapper.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonMockWrapper.System#Collections#IList#RemoveAt(System.Int32)","Type":"method","Syntax":{"content":"void IList.RemoveAt(int index)","parameters":[{"id":"index","type":"System.Int32"}],"content.vb":"Sub System.Collections.IList.RemoveAt(index As Integer) Implements IList.RemoveAt"},"File":"../Documentation~/api/LitJson.JsonMockWrapper.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonMockWrapper.System#Collections#ICollection#Count","Type":"property","Syntax":{"content":"int ICollection.Count { get; }","parameters":[],"return":{"type":"System.Int32"},"content.vb":"ReadOnly WriteOnly Property System.Collections.ICollection.Count As Integer Implements ICollection.Count"},"File":"../Documentation~/api/LitJson.JsonMockWrapper.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonMockWrapper.System#Collections#ICollection#IsSynchronized","Type":"property","Syntax":{"content":"bool ICollection.IsSynchronized { get; }","parameters":[],"return":{"type":"System.Boolean"},"content.vb":"ReadOnly WriteOnly Property System.Collections.ICollection.IsSynchronized As Boolean Implements ICollection.IsSynchronized"},"File":"../Documentation~/api/LitJson.JsonMockWrapper.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonMockWrapper.System#Collections#ICollection#SyncRoot","Type":"property","Syntax":{"content":"object ICollection.SyncRoot { get; }","parameters":[],"return":{"type":"System.Object"},"content.vb":"ReadOnly WriteOnly Property System.Collections.ICollection.SyncRoot As Object Implements ICollection.SyncRoot"},"File":"../Documentation~/api/LitJson.JsonMockWrapper.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonMockWrapper.System#Collections#ICollection#CopyTo(System.Array,System.Int32)","Type":"method","Syntax":{"content":"void ICollection.CopyTo(Array array, int index)","parameters":[{"id":"array","type":"System.Array"},{"id":"index","type":"System.Int32"}],"content.vb":"Sub System.Collections.ICollection.CopyTo(array As Array, index As Integer) Implements ICollection.CopyTo"},"File":"../Documentation~/api/LitJson.JsonMockWrapper.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonMockWrapper.System#Collections#IEnumerable#GetEnumerator","Type":"method","Syntax":{"content":"IEnumerator IEnumerable.GetEnumerator()","return":{"type":"System.Collections.IEnumerator"},"content.vb":"Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator"},"File":"../Documentation~/api/LitJson.JsonMockWrapper.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonMockWrapper.System#Collections#IDictionary#IsFixedSize","Type":"property","Syntax":{"content":"bool IDictionary.IsFixedSize { get; }","parameters":[],"return":{"type":"System.Boolean"},"content.vb":"ReadOnly WriteOnly Property System.Collections.IDictionary.IsFixedSize As Boolean Implements IDictionary.IsFixedSize"},"File":"../Documentation~/api/LitJson.JsonMockWrapper.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonMockWrapper.System#Collections#IDictionary#IsReadOnly","Type":"property","Syntax":{"content":"bool IDictionary.IsReadOnly { get; }","parameters":[],"return":{"type":"System.Boolean"},"content.vb":"ReadOnly WriteOnly Property System.Collections.IDictionary.IsReadOnly As Boolean Implements IDictionary.IsReadOnly"},"File":"../Documentation~/api/LitJson.JsonMockWrapper.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonMockWrapper.System#Collections#IDictionary#Keys","Type":"property","Syntax":{"content":"ICollection IDictionary.Keys { get; }","parameters":[],"return":{"type":"System.Collections.ICollection"},"content.vb":"ReadOnly WriteOnly Property System.Collections.IDictionary.Keys As ICollection Implements IDictionary.Keys"},"File":"../Documentation~/api/LitJson.JsonMockWrapper.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonMockWrapper.System#Collections#IDictionary#Values","Type":"property","Syntax":{"content":"ICollection IDictionary.Values { get; }","parameters":[],"return":{"type":"System.Collections.ICollection"},"content.vb":"ReadOnly WriteOnly Property System.Collections.IDictionary.Values As ICollection Implements IDictionary.Values"},"File":"../Documentation~/api/LitJson.JsonMockWrapper.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonMockWrapper.System#Collections#IDictionary#Item(System.Object)","Type":"property","Syntax":{"content":"object IDictionary.this[object key] { get; set; }","parameters":[{"id":"key","type":"System.Object"}],"return":{"type":"System.Object"},"content.vb":"ReadOnly WriteOnly Property System.Collections.IDictionary.Item(key As Object) As Object Implements IDictionary.this[]"},"File":"../Documentation~/api/LitJson.JsonMockWrapper.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonMockWrapper.System#Collections#IDictionary#Add(System.Object,System.Object)","Type":"method","Syntax":{"content":"void IDictionary.Add(object k, object v)","parameters":[{"id":"k","type":"System.Object"},{"id":"v","type":"System.Object"}],"content.vb":"Sub System.Collections.IDictionary.Add(k As Object, v As Object) Implements IDictionary.Add"},"File":"../Documentation~/api/LitJson.JsonMockWrapper.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonMockWrapper.System#Collections#IDictionary#Clear","Type":"method","Syntax":{"content":"void IDictionary.Clear()","content.vb":"Sub System.Collections.IDictionary.Clear Implements IDictionary.Clear"},"File":"../Documentation~/api/LitJson.JsonMockWrapper.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonMockWrapper.System#Collections#IDictionary#Contains(System.Object)","Type":"method","Syntax":{"content":"bool IDictionary.Contains(object key)","parameters":[{"id":"key","type":"System.Object"}],"return":{"type":"System.Boolean"},"content.vb":"Function System.Collections.IDictionary.Contains(key As Object) As Boolean Implements IDictionary.Contains"},"File":"../Documentation~/api/LitJson.JsonMockWrapper.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonMockWrapper.System#Collections#IDictionary#Remove(System.Object)","Type":"method","Syntax":{"content":"void IDictionary.Remove(object key)","parameters":[{"id":"key","type":"System.Object"}],"content.vb":"Sub System.Collections.IDictionary.Remove(key As Object) Implements IDictionary.Remove"},"File":"../Documentation~/api/LitJson.JsonMockWrapper.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonMockWrapper.System#Collections#IDictionary#GetEnumerator","Type":"method","Syntax":{"content":"IDictionaryEnumerator IDictionary.GetEnumerator()","return":{"type":"System.Collections.IDictionaryEnumerator"},"content.vb":"Function System.Collections.IDictionary.GetEnumerator As IDictionaryEnumerator Implements IDictionary.GetEnumerator"},"File":"../Documentation~/api/LitJson.JsonMockWrapper.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonMockWrapper.System#Collections#Specialized#IOrderedDictionary#Item(System.Int32)","Type":"property","Syntax":{"content":"object IOrderedDictionary.this[int idx] { get; set; }","parameters":[{"id":"idx","type":"System.Int32"}],"return":{"type":"System.Object"},"content.vb":"ReadOnly WriteOnly Property System.Collections.Specialized.IOrderedDictionary.Item(idx As Integer) As Object Implements IOrderedDictionary.this[]"},"File":"../Documentation~/api/LitJson.JsonMockWrapper.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonMockWrapper.System#Collections#Specialized#IOrderedDictionary#GetEnumerator","Type":"method","Syntax":{"content":"IDictionaryEnumerator IOrderedDictionary.GetEnumerator()","return":{"type":"System.Collections.IDictionaryEnumerator"},"content.vb":"Function System.Collections.Specialized.IOrderedDictionary.GetEnumerator As IDictionaryEnumerator Implements IOrderedDictionary.GetEnumerator"},"File":"../Documentation~/api/LitJson.JsonMockWrapper.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonMockWrapper.System#Collections#Specialized#IOrderedDictionary#Insert(System.Int32,System.Object,System.Object)","Type":"method","Syntax":{"content":"void IOrderedDictionary.Insert(int i, object k, object v)","parameters":[{"id":"i","type":"System.Int32"},{"id":"k","type":"System.Object"},{"id":"v","type":"System.Object"}],"content.vb":"Sub System.Collections.Specialized.IOrderedDictionary.Insert(i As Integer, k As Object, v As Object) Implements IOrderedDictionary.Insert"},"File":"../Documentation~/api/LitJson.JsonMockWrapper.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonMockWrapper.System#Collections#Specialized#IOrderedDictionary#RemoveAt(System.Int32)","Type":"method","Syntax":{"content":"void IOrderedDictionary.RemoveAt(int i)","parameters":[{"id":"i","type":"System.Int32"}],"content.vb":"Sub System.Collections.Specialized.IOrderedDictionary.RemoveAt(i As Integer) Implements IOrderedDictionary.RemoveAt"},"File":"../Documentation~/api/LitJson.JsonMockWrapper.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonIgnoreMember","Type":"class","Syntax":{"content":"[AttributeUsage(AttributeTargets.Class | AttributeTargets.Struct, AllowMultiple = true)]\npublic class JsonIgnoreMember : Attribute, _Attribute","content.vb":"<AttributeUsage(AttributeTargets.Class Or AttributeTargets.Struct, AllowMultiple:=True)>\nPublic Class JsonIgnoreMember\n\n    Inherits Attribute\n\n    Implements _Attribute"},"File":"../Documentation~/api/LitJson.JsonIgnoreMember.yml","Metadata":{},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonIgnoreMember.Members","Type":"property","Syntax":{"content":"public HashSet<string> Members { get; }","parameters":[],"return":{"type":"System.Collections.Generic.HashSet{System.String}"},"content.vb":"Public ReadOnly Property Members As HashSet(Of String)"},"File":"../Documentation~/api/LitJson.JsonIgnoreMember.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonIgnoreMember.#ctor(System.String[])","Type":"constructor","Syntax":{"content":"public JsonIgnoreMember(params string[] members)","parameters":[{"id":"members","type":"System.String[]"}],"content.vb":"Public Sub New(ParamArray members As String())"},"File":"../Documentation~/api/LitJson.JsonIgnoreMember.yml","Metadata":{"type":"constructor","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonIgnoreMember.#ctor(System.Collections.Generic.ICollection{System.String})","Type":"constructor","Syntax":{"content":"public JsonIgnoreMember(ICollection<string> members)","parameters":[{"id":"members","type":"System.Collections.Generic.ICollection{System.String}"}],"content.vb":"Public Sub New(members As ICollection(Of String))"},"File":"../Documentation~/api/LitJson.JsonIgnoreMember.yml","Metadata":{"type":"constructor","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonAlias","Type":"class","Syntax":{"content":"[AttributeUsage(AttributeTargets.Field | AttributeTargets.Property)]\npublic class JsonAlias : Attribute, _Attribute","content.vb":"<AttributeUsage(AttributeTargets.Field Or AttributeTargets.Property)>\nPublic Class JsonAlias\n\n    Inherits Attribute\n\n    Implements _Attribute"},"File":"../Documentation~/api/LitJson.JsonAlias.yml","Metadata":{},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonAlias.Alias","Type":"property","Syntax":{"content":"public string Alias { get; }","parameters":[],"return":{"type":"System.String"},"content.vb":"Public ReadOnly Property Alias As String"},"File":"../Documentation~/api/LitJson.JsonAlias.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonAlias.AcceptOriginal","Type":"property","Syntax":{"content":"public bool AcceptOriginal { get; }","parameters":[],"return":{"type":"System.Boolean"},"content.vb":"Public ReadOnly Property AcceptOriginal As Boolean"},"File":"../Documentation~/api/LitJson.JsonAlias.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonAlias.#ctor(System.String,System.Boolean)","Type":"constructor","Syntax":{"content":"public JsonAlias(string aliasName, bool acceptOriginalName = false)","parameters":[{"id":"aliasName","type":"System.String"},{"id":"acceptOriginalName","type":"System.Boolean"}],"content.vb":"Public Sub New(aliasName As String, acceptOriginalName As Boolean = False)"},"File":"../Documentation~/api/LitJson.JsonAlias.yml","Metadata":{"type":"constructor","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonIgnore","Type":"class","Syntax":{"content":"[AttributeUsage(AttributeTargets.Field | AttributeTargets.Property)]\npublic class JsonIgnore : Attribute, _Attribute","content.vb":"<AttributeUsage(AttributeTargets.Field Or AttributeTargets.Property)>\nPublic Class JsonIgnore\n\n    Inherits Attribute\n\n    Implements _Attribute"},"File":"../Documentation~/api/LitJson.JsonIgnore.yml","Metadata":{},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonIgnore.Usage","Type":"property","Syntax":{"content":"public JsonIgnoreWhen Usage { get; }","parameters":[],"return":{"type":"LitJson.JsonIgnoreWhen"},"content.vb":"Public ReadOnly Property Usage As JsonIgnoreWhen"},"File":"../Documentation~/api/LitJson.JsonIgnore.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonIgnore.#ctor","Type":"constructor","Syntax":{"content":"public JsonIgnore()","content.vb":"Public Sub New"},"File":"../Documentation~/api/LitJson.JsonIgnore.yml","Metadata":{"type":"constructor","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonIgnore.#ctor(LitJson.JsonIgnoreWhen)","Type":"constructor","Syntax":{"content":"public JsonIgnore(JsonIgnoreWhen usage)","parameters":[{"id":"usage","type":"LitJson.JsonIgnoreWhen"}],"content.vb":"Public Sub New(usage As JsonIgnoreWhen)"},"File":"../Documentation~/api/LitJson.JsonIgnore.yml","Metadata":{"type":"constructor","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonInclude","Summary":"<p sourcefile=\"../Documentation~/api/LitJson.JsonInclude.yml\" sourcestartlinenumber=\"2\">Attribute to be placed on non-public fields or properties to include them in serialization.</p>\n","Type":"class","Syntax":{"content":"[AttributeUsage(AttributeTargets.Field | AttributeTargets.Property)]\npublic class JsonInclude : Attribute, _Attribute","content.vb":"<AttributeUsage(AttributeTargets.Field Or AttributeTargets.Property)>\nPublic Class JsonInclude\n\n    Inherits Attribute\n\n    Implements _Attribute"},"File":"../Documentation~/api/LitJson.JsonInclude.yml","Metadata":{},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.IJsonWrapper","Summary":"<p sourcefile=\"../Documentation~/api/LitJson.IJsonWrapper.yml\" sourcestartlinenumber=\"2\">Interface that represents a type capable of handling all kinds of JSON data.\nThis is mainly used when mapping objects through JsonMapper, and it's implemented by JsonData.</p>\n","Type":"interface","Syntax":{"content":"public interface IJsonWrapper : IList, IOrderedDictionary, IDictionary, ICollection, IEnumerable","content.vb":"Public Interface IJsonWrapper\n\n    Inherits IList, IOrderedDictionary"},"File":"../Documentation~/api/LitJson.IJsonWrapper.yml","Metadata":{},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.IJsonWrapper.IsObject","Type":"property","Syntax":{"content":"bool IsObject { get; }","parameters":[],"return":{"type":"System.Boolean"},"content.vb":"ReadOnly Property IsObject As Boolean"},"File":"../Documentation~/api/LitJson.IJsonWrapper.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.IJsonWrapper.IsArray","Type":"property","Syntax":{"content":"bool IsArray { get; }","parameters":[],"return":{"type":"System.Boolean"},"content.vb":"ReadOnly Property IsArray As Boolean"},"File":"../Documentation~/api/LitJson.IJsonWrapper.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.IJsonWrapper.IsString","Type":"property","Syntax":{"content":"bool IsString { get; }","parameters":[],"return":{"type":"System.Boolean"},"content.vb":"ReadOnly Property IsString As Boolean"},"File":"../Documentation~/api/LitJson.IJsonWrapper.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.IJsonWrapper.IsNatural","Type":"property","Syntax":{"content":"bool IsNatural { get; }","parameters":[],"return":{"type":"System.Boolean"},"content.vb":"ReadOnly Property IsNatural As Boolean"},"File":"../Documentation~/api/LitJson.IJsonWrapper.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.IJsonWrapper.IsReal","Type":"property","Syntax":{"content":"bool IsReal { get; }","parameters":[],"return":{"type":"System.Boolean"},"content.vb":"ReadOnly Property IsReal As Boolean"},"File":"../Documentation~/api/LitJson.IJsonWrapper.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.IJsonWrapper.IsBoolean","Type":"property","Syntax":{"content":"bool IsBoolean { get; }","parameters":[],"return":{"type":"System.Boolean"},"content.vb":"ReadOnly Property IsBoolean As Boolean"},"File":"../Documentation~/api/LitJson.IJsonWrapper.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.IJsonWrapper.GetJsonType","Type":"method","Syntax":{"content":"JsonType GetJsonType()","return":{"type":"LitJson.JsonType"},"content.vb":"Function GetJsonType As JsonType"},"File":"../Documentation~/api/LitJson.IJsonWrapper.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.IJsonWrapper.GetString","Type":"method","Syntax":{"content":"string GetString()","return":{"type":"System.String"},"content.vb":"Function GetString As String"},"File":"../Documentation~/api/LitJson.IJsonWrapper.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.IJsonWrapper.GetNatural","Type":"method","Syntax":{"content":"long GetNatural()","return":{"type":"System.Int64"},"content.vb":"Function GetNatural As Long"},"File":"../Documentation~/api/LitJson.IJsonWrapper.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.IJsonWrapper.GetReal","Type":"method","Syntax":{"content":"double GetReal()","return":{"type":"System.Double"},"content.vb":"Function GetReal As Double"},"File":"../Documentation~/api/LitJson.IJsonWrapper.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.IJsonWrapper.GetBoolean","Type":"method","Syntax":{"content":"bool GetBoolean()","return":{"type":"System.Boolean"},"content.vb":"Function GetBoolean As Boolean"},"File":"../Documentation~/api/LitJson.IJsonWrapper.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.IJsonWrapper.SetJsonType(LitJson.JsonType)","Type":"method","Syntax":{"content":"void SetJsonType(JsonType type)","parameters":[{"id":"type","type":"LitJson.JsonType"}],"content.vb":"Sub SetJsonType(type As JsonType)"},"File":"../Documentation~/api/LitJson.IJsonWrapper.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.IJsonWrapper.SetString(System.String)","Type":"method","Syntax":{"content":"void SetString(string val)","parameters":[{"id":"val","type":"System.String"}],"content.vb":"Sub SetString(val As String)"},"File":"../Documentation~/api/LitJson.IJsonWrapper.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.IJsonWrapper.SetNatural(System.Int64)","Type":"method","Syntax":{"content":"void SetNatural(long val)","parameters":[{"id":"val","type":"System.Int64"}],"content.vb":"Sub SetNatural(val As Long)"},"File":"../Documentation~/api/LitJson.IJsonWrapper.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.IJsonWrapper.SetReal(System.Double)","Type":"method","Syntax":{"content":"void SetReal(double val)","parameters":[{"id":"val","type":"System.Double"}],"content.vb":"Sub SetReal(val As Double)"},"File":"../Documentation~/api/LitJson.IJsonWrapper.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.IJsonWrapper.SetBoolean(System.Boolean)","Type":"method","Syntax":{"content":"void SetBoolean(bool val)","parameters":[{"id":"val","type":"System.Boolean"}],"content.vb":"Sub SetBoolean(val As Boolean)"},"File":"../Documentation~/api/LitJson.IJsonWrapper.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.IJsonWrapper.ToJson","Type":"method","Syntax":{"content":"string ToJson()","return":{"type":"System.String"},"content.vb":"Function ToJson As String"},"File":"../Documentation~/api/LitJson.IJsonWrapper.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.IJsonWrapper.ToJson(LitJson.JsonWriter)","Type":"method","Syntax":{"content":"void ToJson(JsonWriter writer)","parameters":[{"id":"writer","type":"LitJson.JsonWriter"}],"content.vb":"Sub ToJson(writer As JsonWriter)"},"File":"../Documentation~/api/LitJson.IJsonWrapper.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonException","Summary":"<p sourcefile=\"../Documentation~/api/LitJson.JsonException.yml\" sourcestartlinenumber=\"2\">Base class throwed by LitJSON when a parsing error occurs.</p>\n","Type":"class","Syntax":{"content":"public class JsonException : Exception, _Exception, ISerializable","content.vb":"Public Class JsonException\n\n    Inherits Exception\n\n    Implements _Exception, ISerializable"},"File":"../Documentation~/api/LitJson.JsonException.yml","Metadata":{},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonException.#ctor","Type":"constructor","Syntax":{"content":"public JsonException()","content.vb":"Public Sub New"},"File":"../Documentation~/api/LitJson.JsonException.yml","Metadata":{"type":"constructor","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonException.#ctor(System.String)","Type":"constructor","Syntax":{"content":"public JsonException(string message)","parameters":[{"id":"message","type":"System.String"}],"content.vb":"Public Sub New(message As String)"},"File":"../Documentation~/api/LitJson.JsonException.yml","Metadata":{"type":"constructor","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonException.#ctor(System.String,System.Exception)","Type":"constructor","Syntax":{"content":"public JsonException(string message, Exception inner)","parameters":[{"id":"message","type":"System.String"},{"id":"inner","type":"System.Exception"}],"content.vb":"Public Sub New(message As String, inner As Exception)"},"File":"../Documentation~/api/LitJson.JsonException.yml","Metadata":{"type":"constructor","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.WrapperFactory","Type":"delegate","Syntax":{"content":"public delegate IJsonWrapper WrapperFactory();","return":{"type":"LitJson.IJsonWrapper"},"content.vb":"Public Delegate Function WrapperFactory As IJsonWrapper"},"File":"../Documentation~/api/LitJson.WrapperFactory.yml","Metadata":{},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonMapper","Summary":"<p sourcefile=\"../Documentation~/api/LitJson.JsonMapper.yml\" sourcestartlinenumber=\"2\">JSON to .Net object and object to JSON conversions.</p>\n","Type":"class","Syntax":{"content":"public class JsonMapper","content.vb":"Public Class JsonMapper"},"File":"../Documentation~/api/LitJson.JsonMapper.yml","Metadata":{},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonMapper.ToJson(System.Object)","Type":"method","Syntax":{"content":"public static string ToJson(object obj)","parameters":[{"id":"obj","type":"System.Object"}],"return":{"type":"System.String"},"content.vb":"Public Shared Function ToJson(obj As Object) As String"},"File":"../Documentation~/api/LitJson.JsonMapper.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonMapper.ToJson(System.Object,LitJson.JsonWriter)","Type":"method","Syntax":{"content":"public static void ToJson(object obj, JsonWriter writer)","parameters":[{"id":"obj","type":"System.Object"},{"id":"writer","type":"LitJson.JsonWriter"}],"content.vb":"Public Shared Sub ToJson(obj As Object, writer As JsonWriter)"},"File":"../Documentation~/api/LitJson.JsonMapper.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonMapper.ToObject(LitJson.JsonReader)","Type":"method","Syntax":{"content":"public static JsonData ToObject(JsonReader reader)","parameters":[{"id":"reader","type":"LitJson.JsonReader"}],"return":{"type":"LitJson.JsonData"},"content.vb":"Public Shared Function ToObject(reader As JsonReader) As JsonData"},"File":"../Documentation~/api/LitJson.JsonMapper.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonMapper.ToObject(System.IO.TextReader)","Type":"method","Syntax":{"content":"public static JsonData ToObject(TextReader reader)","parameters":[{"id":"reader","type":"System.IO.TextReader"}],"return":{"type":"LitJson.JsonData"},"content.vb":"Public Shared Function ToObject(reader As TextReader) As JsonData"},"File":"../Documentation~/api/LitJson.JsonMapper.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonMapper.ToObject(System.String)","Type":"method","Syntax":{"content":"public static JsonData ToObject(string json)","parameters":[{"id":"json","type":"System.String"}],"return":{"type":"LitJson.JsonData"},"content.vb":"Public Shared Function ToObject(json As String) As JsonData"},"File":"../Documentation~/api/LitJson.JsonMapper.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonMapper.ToObject``1(LitJson.JsonReader)","Type":"method","Syntax":{"content":"public static T ToObject<T>(JsonReader reader)","parameters":[{"id":"reader","type":"LitJson.JsonReader"}],"typeParameters":[{"id":"T"}],"return":{"type":"{T}"},"content.vb":"Public Shared Function ToObject(Of T)(reader As JsonReader) As T"},"File":"../Documentation~/api/LitJson.JsonMapper.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonMapper.ToObject``1(System.IO.TextReader)","Type":"method","Syntax":{"content":"public static T ToObject<T>(TextReader reader)","parameters":[{"id":"reader","type":"System.IO.TextReader"}],"typeParameters":[{"id":"T"}],"return":{"type":"{T}"},"content.vb":"Public Shared Function ToObject(Of T)(reader As TextReader) As T"},"File":"../Documentation~/api/LitJson.JsonMapper.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonMapper.ToObject``1(System.String)","Type":"method","Syntax":{"content":"public static T ToObject<T>(string json)","parameters":[{"id":"json","type":"System.String"}],"typeParameters":[{"id":"T"}],"return":{"type":"{T}"},"content.vb":"Public Shared Function ToObject(Of T)(json As String) As T"},"File":"../Documentation~/api/LitJson.JsonMapper.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonMapper.ToWrapper(LitJson.WrapperFactory,LitJson.JsonReader)","Type":"method","Syntax":{"content":"public static IJsonWrapper ToWrapper(WrapperFactory factory, JsonReader reader)","parameters":[{"id":"factory","type":"LitJson.WrapperFactory"},{"id":"reader","type":"LitJson.JsonReader"}],"return":{"type":"LitJson.IJsonWrapper"},"content.vb":"Public Shared Function ToWrapper(factory As WrapperFactory, reader As JsonReader) As IJsonWrapper"},"File":"../Documentation~/api/LitJson.JsonMapper.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonMapper.ToWrapper(LitJson.WrapperFactory,System.String)","Type":"method","Syntax":{"content":"public static IJsonWrapper ToWrapper(WrapperFactory factory, string json)","parameters":[{"id":"factory","type":"LitJson.WrapperFactory"},{"id":"json","type":"System.String"}],"return":{"type":"LitJson.IJsonWrapper"},"content.vb":"Public Shared Function ToWrapper(factory As WrapperFactory, json As String) As IJsonWrapper"},"File":"../Documentation~/api/LitJson.JsonMapper.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonMapper.RegisterExporter``1(LitJson.ExporterFunc{``0})","Type":"method","Syntax":{"content":"public static void RegisterExporter<T>(ExporterFunc<T> exporter)","parameters":[{"id":"exporter","type":"LitJson.ExporterFunc{{T}}"}],"typeParameters":[{"id":"T"}],"content.vb":"Public Shared Sub RegisterExporter(Of T)(exporter As ExporterFunc(Of T))"},"File":"../Documentation~/api/LitJson.JsonMapper.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonMapper.RegisterImporter``2(LitJson.ImporterFunc{``0,``1})","Type":"method","Syntax":{"content":"public static void RegisterImporter<TJson, TValue>(ImporterFunc<TJson, TValue> importer)","parameters":[{"id":"importer","type":"LitJson.ImporterFunc{{TJson},{TValue}}"}],"typeParameters":[{"id":"TJson"},{"id":"TValue"}],"content.vb":"Public Shared Sub RegisterImporter(Of TJson, TValue)(importer As ImporterFunc(Of TJson, TValue))"},"File":"../Documentation~/api/LitJson.JsonMapper.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonMapper.RegisterFactory``1(LitJson.FactoryFunc{``0})","Type":"method","Syntax":{"content":"public static void RegisterFactory<T>(FactoryFunc<T> factory)","parameters":[{"id":"factory","type":"LitJson.FactoryFunc{{T}}"}],"typeParameters":[{"id":"T"}],"content.vb":"Public Shared Sub RegisterFactory(Of T)(factory As FactoryFunc(Of T))"},"File":"../Documentation~/api/LitJson.JsonMapper.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonMapper.UnregisterFactories","Type":"method","Syntax":{"content":"public static void UnregisterFactories()","content.vb":"Public Shared Sub UnregisterFactories"},"File":"../Documentation~/api/LitJson.JsonMapper.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonMapper.UnregisterExporters","Type":"method","Syntax":{"content":"public static void UnregisterExporters()","content.vb":"Public Shared Sub UnregisterExporters"},"File":"../Documentation~/api/LitJson.JsonMapper.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson.JsonMapper.UnregisterImporters","Type":"method","Syntax":{"content":"public static void UnregisterImporters()","content.vb":"Public Shared Sub UnregisterImporters"},"File":"../Documentation~/api/LitJson.JsonMapper.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"LitJson","Type":"namespace","File":"../Documentation~/api/LitJson.yml","Metadata":{},"IsExplicitInterfaceImplementation":false}]