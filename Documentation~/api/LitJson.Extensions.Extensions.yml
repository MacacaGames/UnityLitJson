### YamlMime:ManagedReference
items:
- uid: LitJson.Extensions.Extensions
  commentId: T:LitJson.Extensions.Extensions
  id: Extensions
  parent: LitJson.Extensions
  children:
  - LitJson.Extensions.Extensions.WriteProperty(LitJson.JsonWriter,System.String,System.Boolean)
  - LitJson.Extensions.Extensions.WriteProperty(LitJson.JsonWriter,System.String,System.Double)
  - LitJson.Extensions.Extensions.WriteProperty(LitJson.JsonWriter,System.String,System.Int64)
  - LitJson.Extensions.Extensions.WriteProperty(LitJson.JsonWriter,System.String,System.String)
  langs:
  - csharp
  - vb
  name: Extensions
  nameWithType: Extensions
  fullName: LitJson.Extensions.Extensions
  type: Class
  source:
    remote:
      path: Source/Extensions.cs
      branch: master
      repo: https://github.com/MacacaGames/UnityLitJson.git
    id: Extensions
    path: ../Source/Extensions.cs
    startLine: 6
  assemblies:
  - UnityLitJson
  namespace: LitJson.Extensions
  syntax:
    content: public static class Extensions
    content.vb: Public Module Extensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: LitJson.Extensions.Extensions.WriteProperty(LitJson.JsonWriter,System.String,System.Int64)
  commentId: M:LitJson.Extensions.Extensions.WriteProperty(LitJson.JsonWriter,System.String,System.Int64)
  id: WriteProperty(LitJson.JsonWriter,System.String,System.Int64)
  isExtensionMethod: true
  parent: LitJson.Extensions.Extensions
  langs:
  - csharp
  - vb
  name: WriteProperty(JsonWriter, String, Int64)
  nameWithType: Extensions.WriteProperty(JsonWriter, String, Int64)
  fullName: LitJson.Extensions.Extensions.WriteProperty(LitJson.JsonWriter, System.String, System.Int64)
  type: Method
  source:
    remote:
      path: Source/Extensions.cs
      branch: master
      repo: https://github.com/MacacaGames/UnityLitJson.git
    id: WriteProperty
    path: ../Source/Extensions.cs
    startLine: 9
  assemblies:
  - UnityLitJson
  namespace: LitJson.Extensions
  syntax:
    content: public static void WriteProperty(this JsonWriter w, string name, long value)
    parameters:
    - id: w
      type: LitJson.JsonWriter
    - id: name
      type: System.String
    - id: value
      type: System.Int64
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub WriteProperty(w As JsonWriter, name As String, value As Long)
  overload: LitJson.Extensions.Extensions.WriteProperty*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: LitJson.Extensions.Extensions.WriteProperty(LitJson.JsonWriter,System.String,System.String)
  commentId: M:LitJson.Extensions.Extensions.WriteProperty(LitJson.JsonWriter,System.String,System.String)
  id: WriteProperty(LitJson.JsonWriter,System.String,System.String)
  isExtensionMethod: true
  parent: LitJson.Extensions.Extensions
  langs:
  - csharp
  - vb
  name: WriteProperty(JsonWriter, String, String)
  nameWithType: Extensions.WriteProperty(JsonWriter, String, String)
  fullName: LitJson.Extensions.Extensions.WriteProperty(LitJson.JsonWriter, System.String, System.String)
  type: Method
  source:
    remote:
      path: Source/Extensions.cs
      branch: master
      repo: https://github.com/MacacaGames/UnityLitJson.git
    id: WriteProperty
    path: ../Source/Extensions.cs
    startLine: 15
  assemblies:
  - UnityLitJson
  namespace: LitJson.Extensions
  syntax:
    content: public static void WriteProperty(this JsonWriter w, string name, string value)
    parameters:
    - id: w
      type: LitJson.JsonWriter
    - id: name
      type: System.String
    - id: value
      type: System.String
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub WriteProperty(w As JsonWriter, name As String, value As String)
  overload: LitJson.Extensions.Extensions.WriteProperty*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: LitJson.Extensions.Extensions.WriteProperty(LitJson.JsonWriter,System.String,System.Boolean)
  commentId: M:LitJson.Extensions.Extensions.WriteProperty(LitJson.JsonWriter,System.String,System.Boolean)
  id: WriteProperty(LitJson.JsonWriter,System.String,System.Boolean)
  isExtensionMethod: true
  parent: LitJson.Extensions.Extensions
  langs:
  - csharp
  - vb
  name: WriteProperty(JsonWriter, String, Boolean)
  nameWithType: Extensions.WriteProperty(JsonWriter, String, Boolean)
  fullName: LitJson.Extensions.Extensions.WriteProperty(LitJson.JsonWriter, System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: Source/Extensions.cs
      branch: master
      repo: https://github.com/MacacaGames/UnityLitJson.git
    id: WriteProperty
    path: ../Source/Extensions.cs
    startLine: 21
  assemblies:
  - UnityLitJson
  namespace: LitJson.Extensions
  syntax:
    content: public static void WriteProperty(this JsonWriter w, string name, bool value)
    parameters:
    - id: w
      type: LitJson.JsonWriter
    - id: name
      type: System.String
    - id: value
      type: System.Boolean
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub WriteProperty(w As JsonWriter, name As String, value As Boolean)
  overload: LitJson.Extensions.Extensions.WriteProperty*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: LitJson.Extensions.Extensions.WriteProperty(LitJson.JsonWriter,System.String,System.Double)
  commentId: M:LitJson.Extensions.Extensions.WriteProperty(LitJson.JsonWriter,System.String,System.Double)
  id: WriteProperty(LitJson.JsonWriter,System.String,System.Double)
  isExtensionMethod: true
  parent: LitJson.Extensions.Extensions
  langs:
  - csharp
  - vb
  name: WriteProperty(JsonWriter, String, Double)
  nameWithType: Extensions.WriteProperty(JsonWriter, String, Double)
  fullName: LitJson.Extensions.Extensions.WriteProperty(LitJson.JsonWriter, System.String, System.Double)
  type: Method
  source:
    remote:
      path: Source/Extensions.cs
      branch: master
      repo: https://github.com/MacacaGames/UnityLitJson.git
    id: WriteProperty
    path: ../Source/Extensions.cs
    startLine: 27
  assemblies:
  - UnityLitJson
  namespace: LitJson.Extensions
  syntax:
    content: public static void WriteProperty(this JsonWriter w, string name, double value)
    parameters:
    - id: w
      type: LitJson.JsonWriter
    - id: name
      type: System.String
    - id: value
      type: System.Double
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub WriteProperty(w As JsonWriter, name As String, value As Double)
  overload: LitJson.Extensions.Extensions.WriteProperty*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: LitJson.Extensions
  commentId: N:LitJson.Extensions
  name: LitJson.Extensions
  nameWithType: LitJson.Extensions
  fullName: LitJson.Extensions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: LitJson.Extensions.Extensions.WriteProperty*
  commentId: Overload:LitJson.Extensions.Extensions.WriteProperty
  name: WriteProperty
  nameWithType: Extensions.WriteProperty
  fullName: LitJson.Extensions.Extensions.WriteProperty
- uid: LitJson.JsonWriter
  commentId: T:LitJson.JsonWriter
  parent: LitJson
  name: JsonWriter
  nameWithType: JsonWriter
  fullName: LitJson.JsonWriter
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: LitJson
  commentId: N:LitJson
  name: LitJson
  nameWithType: LitJson
  fullName: LitJson
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
