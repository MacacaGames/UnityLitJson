### YamlMime:ManagedReference
items:
- uid: LitJson.JsonMockWrapper
  commentId: T:LitJson.JsonMockWrapper
  id: JsonMockWrapper
  parent: LitJson
  children:
  - LitJson.JsonMockWrapper.GetBoolean
  - LitJson.JsonMockWrapper.GetJsonType
  - LitJson.JsonMockWrapper.GetNatural
  - LitJson.JsonMockWrapper.GetReal
  - LitJson.JsonMockWrapper.GetString
  - LitJson.JsonMockWrapper.IsArray
  - LitJson.JsonMockWrapper.IsBoolean
  - LitJson.JsonMockWrapper.IsNatural
  - LitJson.JsonMockWrapper.IsObject
  - LitJson.JsonMockWrapper.IsReal
  - LitJson.JsonMockWrapper.IsString
  - LitJson.JsonMockWrapper.SetBoolean(System.Boolean)
  - LitJson.JsonMockWrapper.SetJsonType(LitJson.JsonType)
  - LitJson.JsonMockWrapper.SetNatural(System.Int64)
  - LitJson.JsonMockWrapper.SetReal(System.Double)
  - LitJson.JsonMockWrapper.SetString(System.String)
  - LitJson.JsonMockWrapper.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - LitJson.JsonMockWrapper.System#Collections#ICollection#Count
  - LitJson.JsonMockWrapper.System#Collections#ICollection#IsSynchronized
  - LitJson.JsonMockWrapper.System#Collections#ICollection#SyncRoot
  - LitJson.JsonMockWrapper.System#Collections#IDictionary#Add(System.Object,System.Object)
  - LitJson.JsonMockWrapper.System#Collections#IDictionary#Clear
  - LitJson.JsonMockWrapper.System#Collections#IDictionary#Contains(System.Object)
  - LitJson.JsonMockWrapper.System#Collections#IDictionary#GetEnumerator
  - LitJson.JsonMockWrapper.System#Collections#IDictionary#IsFixedSize
  - LitJson.JsonMockWrapper.System#Collections#IDictionary#IsReadOnly
  - LitJson.JsonMockWrapper.System#Collections#IDictionary#Item(System.Object)
  - LitJson.JsonMockWrapper.System#Collections#IDictionary#Keys
  - LitJson.JsonMockWrapper.System#Collections#IDictionary#Remove(System.Object)
  - LitJson.JsonMockWrapper.System#Collections#IDictionary#Values
  - LitJson.JsonMockWrapper.System#Collections#IEnumerable#GetEnumerator
  - LitJson.JsonMockWrapper.System#Collections#IList#Add(System.Object)
  - LitJson.JsonMockWrapper.System#Collections#IList#Clear
  - LitJson.JsonMockWrapper.System#Collections#IList#Contains(System.Object)
  - LitJson.JsonMockWrapper.System#Collections#IList#IndexOf(System.Object)
  - LitJson.JsonMockWrapper.System#Collections#IList#Insert(System.Int32,System.Object)
  - LitJson.JsonMockWrapper.System#Collections#IList#IsFixedSize
  - LitJson.JsonMockWrapper.System#Collections#IList#IsReadOnly
  - LitJson.JsonMockWrapper.System#Collections#IList#Item(System.Int32)
  - LitJson.JsonMockWrapper.System#Collections#IList#Remove(System.Object)
  - LitJson.JsonMockWrapper.System#Collections#IList#RemoveAt(System.Int32)
  - LitJson.JsonMockWrapper.System#Collections#Specialized#IOrderedDictionary#GetEnumerator
  - LitJson.JsonMockWrapper.System#Collections#Specialized#IOrderedDictionary#Insert(System.Int32,System.Object,System.Object)
  - LitJson.JsonMockWrapper.System#Collections#Specialized#IOrderedDictionary#Item(System.Int32)
  - LitJson.JsonMockWrapper.System#Collections#Specialized#IOrderedDictionary#RemoveAt(System.Int32)
  - LitJson.JsonMockWrapper.ToJson
  - LitJson.JsonMockWrapper.ToJson(LitJson.JsonWriter)
  langs:
  - csharp
  - vb
  name: JsonMockWrapper
  nameWithType: JsonMockWrapper
  fullName: LitJson.JsonMockWrapper
  type: Class
  source:
    remote:
      path: Source/JsonMockWrapper.cs
      branch: master
      repo: https://github.com/MacacaGames/UnityLitJson.git
    id: JsonMockWrapper
    path: ../Source/JsonMockWrapper.cs
    startLine: 16
  assemblies:
  - UnityLitJson
  namespace: LitJson
  summary: "\nMock object implementing IJsonWrapper, to facilitate actions like skipping data more efficiently.\n"
  example: []
  syntax:
    content: 'public class JsonMockWrapper : IJsonWrapper, IList, IOrderedDictionary, IDictionary, ICollection, IEnumerable'
    content.vb: >-
      Public Class JsonMockWrapper

          Implements IJsonWrapper, IList, IOrderedDictionary, IDictionary, ICollection, IEnumerable
  inheritance:
  - System.Object
  implements:
  - LitJson.IJsonWrapper
  - System.Collections.IList
  - System.Collections.Specialized.IOrderedDictionary
  - System.Collections.IDictionary
  - System.Collections.ICollection
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: LitJson.JsonMockWrapper.IsArray
  commentId: P:LitJson.JsonMockWrapper.IsArray
  id: IsArray
  parent: LitJson.JsonMockWrapper
  langs:
  - csharp
  - vb
  name: IsArray
  nameWithType: JsonMockWrapper.IsArray
  fullName: LitJson.JsonMockWrapper.IsArray
  type: Property
  source:
    remote:
      path: Source/JsonMockWrapper.cs
      branch: master
      repo: https://github.com/MacacaGames/UnityLitJson.git
    id: IsArray
    path: ../Source/JsonMockWrapper.cs
    startLine: 17
  assemblies:
  - UnityLitJson
  namespace: LitJson
  syntax:
    content: public bool IsArray { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsArray As Boolean
  overload: LitJson.JsonMockWrapper.IsArray*
  implements:
  - LitJson.IJsonWrapper.IsArray
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: LitJson.JsonMockWrapper.IsBoolean
  commentId: P:LitJson.JsonMockWrapper.IsBoolean
  id: IsBoolean
  parent: LitJson.JsonMockWrapper
  langs:
  - csharp
  - vb
  name: IsBoolean
  nameWithType: JsonMockWrapper.IsBoolean
  fullName: LitJson.JsonMockWrapper.IsBoolean
  type: Property
  source:
    remote:
      path: Source/JsonMockWrapper.cs
      branch: master
      repo: https://github.com/MacacaGames/UnityLitJson.git
    id: IsBoolean
    path: ../Source/JsonMockWrapper.cs
    startLine: 18
  assemblies:
  - UnityLitJson
  namespace: LitJson
  syntax:
    content: public bool IsBoolean { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsBoolean As Boolean
  overload: LitJson.JsonMockWrapper.IsBoolean*
  implements:
  - LitJson.IJsonWrapper.IsBoolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: LitJson.JsonMockWrapper.IsReal
  commentId: P:LitJson.JsonMockWrapper.IsReal
  id: IsReal
  parent: LitJson.JsonMockWrapper
  langs:
  - csharp
  - vb
  name: IsReal
  nameWithType: JsonMockWrapper.IsReal
  fullName: LitJson.JsonMockWrapper.IsReal
  type: Property
  source:
    remote:
      path: Source/JsonMockWrapper.cs
      branch: master
      repo: https://github.com/MacacaGames/UnityLitJson.git
    id: IsReal
    path: ../Source/JsonMockWrapper.cs
    startLine: 19
  assemblies:
  - UnityLitJson
  namespace: LitJson
  syntax:
    content: public bool IsReal { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsReal As Boolean
  overload: LitJson.JsonMockWrapper.IsReal*
  implements:
  - LitJson.IJsonWrapper.IsReal
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: LitJson.JsonMockWrapper.IsNatural
  commentId: P:LitJson.JsonMockWrapper.IsNatural
  id: IsNatural
  parent: LitJson.JsonMockWrapper
  langs:
  - csharp
  - vb
  name: IsNatural
  nameWithType: JsonMockWrapper.IsNatural
  fullName: LitJson.JsonMockWrapper.IsNatural
  type: Property
  source:
    remote:
      path: Source/JsonMockWrapper.cs
      branch: master
      repo: https://github.com/MacacaGames/UnityLitJson.git
    id: IsNatural
    path: ../Source/JsonMockWrapper.cs
    startLine: 20
  assemblies:
  - UnityLitJson
  namespace: LitJson
  syntax:
    content: public bool IsNatural { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsNatural As Boolean
  overload: LitJson.JsonMockWrapper.IsNatural*
  implements:
  - LitJson.IJsonWrapper.IsNatural
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: LitJson.JsonMockWrapper.IsObject
  commentId: P:LitJson.JsonMockWrapper.IsObject
  id: IsObject
  parent: LitJson.JsonMockWrapper
  langs:
  - csharp
  - vb
  name: IsObject
  nameWithType: JsonMockWrapper.IsObject
  fullName: LitJson.JsonMockWrapper.IsObject
  type: Property
  source:
    remote:
      path: Source/JsonMockWrapper.cs
      branch: master
      repo: https://github.com/MacacaGames/UnityLitJson.git
    id: IsObject
    path: ../Source/JsonMockWrapper.cs
    startLine: 21
  assemblies:
  - UnityLitJson
  namespace: LitJson
  syntax:
    content: public bool IsObject { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsObject As Boolean
  overload: LitJson.JsonMockWrapper.IsObject*
  implements:
  - LitJson.IJsonWrapper.IsObject
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: LitJson.JsonMockWrapper.IsString
  commentId: P:LitJson.JsonMockWrapper.IsString
  id: IsString
  parent: LitJson.JsonMockWrapper
  langs:
  - csharp
  - vb
  name: IsString
  nameWithType: JsonMockWrapper.IsString
  fullName: LitJson.JsonMockWrapper.IsString
  type: Property
  source:
    remote:
      path: Source/JsonMockWrapper.cs
      branch: master
      repo: https://github.com/MacacaGames/UnityLitJson.git
    id: IsString
    path: ../Source/JsonMockWrapper.cs
    startLine: 22
  assemblies:
  - UnityLitJson
  namespace: LitJson
  syntax:
    content: public bool IsString { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsString As Boolean
  overload: LitJson.JsonMockWrapper.IsString*
  implements:
  - LitJson.IJsonWrapper.IsString
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: LitJson.JsonMockWrapper.GetBoolean
  commentId: M:LitJson.JsonMockWrapper.GetBoolean
  id: GetBoolean
  parent: LitJson.JsonMockWrapper
  langs:
  - csharp
  - vb
  name: GetBoolean()
  nameWithType: JsonMockWrapper.GetBoolean()
  fullName: LitJson.JsonMockWrapper.GetBoolean()
  type: Method
  source:
    remote:
      path: Source/JsonMockWrapper.cs
      branch: master
      repo: https://github.com/MacacaGames/UnityLitJson.git
    id: GetBoolean
    path: ../Source/JsonMockWrapper.cs
    startLine: 24
  assemblies:
  - UnityLitJson
  namespace: LitJson
  syntax:
    content: public bool GetBoolean()
    return:
      type: System.Boolean
    content.vb: Public Function GetBoolean As Boolean
  overload: LitJson.JsonMockWrapper.GetBoolean*
  implements:
  - LitJson.IJsonWrapper.GetBoolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: LitJson.JsonMockWrapper.GetReal
  commentId: M:LitJson.JsonMockWrapper.GetReal
  id: GetReal
  parent: LitJson.JsonMockWrapper
  langs:
  - csharp
  - vb
  name: GetReal()
  nameWithType: JsonMockWrapper.GetReal()
  fullName: LitJson.JsonMockWrapper.GetReal()
  type: Method
  source:
    remote:
      path: Source/JsonMockWrapper.cs
      branch: master
      repo: https://github.com/MacacaGames/UnityLitJson.git
    id: GetReal
    path: ../Source/JsonMockWrapper.cs
    startLine: 25
  assemblies:
  - UnityLitJson
  namespace: LitJson
  syntax:
    content: public double GetReal()
    return:
      type: System.Double
    content.vb: Public Function GetReal As Double
  overload: LitJson.JsonMockWrapper.GetReal*
  implements:
  - LitJson.IJsonWrapper.GetReal
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: LitJson.JsonMockWrapper.GetNatural
  commentId: M:LitJson.JsonMockWrapper.GetNatural
  id: GetNatural
  parent: LitJson.JsonMockWrapper
  langs:
  - csharp
  - vb
  name: GetNatural()
  nameWithType: JsonMockWrapper.GetNatural()
  fullName: LitJson.JsonMockWrapper.GetNatural()
  type: Method
  source:
    remote:
      path: Source/JsonMockWrapper.cs
      branch: master
      repo: https://github.com/MacacaGames/UnityLitJson.git
    id: GetNatural
    path: ../Source/JsonMockWrapper.cs
    startLine: 26
  assemblies:
  - UnityLitJson
  namespace: LitJson
  syntax:
    content: public long GetNatural()
    return:
      type: System.Int64
    content.vb: Public Function GetNatural As Long
  overload: LitJson.JsonMockWrapper.GetNatural*
  implements:
  - LitJson.IJsonWrapper.GetNatural
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: LitJson.JsonMockWrapper.GetJsonType
  commentId: M:LitJson.JsonMockWrapper.GetJsonType
  id: GetJsonType
  parent: LitJson.JsonMockWrapper
  langs:
  - csharp
  - vb
  name: GetJsonType()
  nameWithType: JsonMockWrapper.GetJsonType()
  fullName: LitJson.JsonMockWrapper.GetJsonType()
  type: Method
  source:
    remote:
      path: Source/JsonMockWrapper.cs
      branch: master
      repo: https://github.com/MacacaGames/UnityLitJson.git
    id: GetJsonType
    path: ../Source/JsonMockWrapper.cs
    startLine: 27
  assemblies:
  - UnityLitJson
  namespace: LitJson
  syntax:
    content: public JsonType GetJsonType()
    return:
      type: LitJson.JsonType
    content.vb: Public Function GetJsonType As JsonType
  overload: LitJson.JsonMockWrapper.GetJsonType*
  implements:
  - LitJson.IJsonWrapper.GetJsonType
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: LitJson.JsonMockWrapper.GetString
  commentId: M:LitJson.JsonMockWrapper.GetString
  id: GetString
  parent: LitJson.JsonMockWrapper
  langs:
  - csharp
  - vb
  name: GetString()
  nameWithType: JsonMockWrapper.GetString()
  fullName: LitJson.JsonMockWrapper.GetString()
  type: Method
  source:
    remote:
      path: Source/JsonMockWrapper.cs
      branch: master
      repo: https://github.com/MacacaGames/UnityLitJson.git
    id: GetString
    path: ../Source/JsonMockWrapper.cs
    startLine: 28
  assemblies:
  - UnityLitJson
  namespace: LitJson
  syntax:
    content: public string GetString()
    return:
      type: System.String
    content.vb: Public Function GetString As String
  overload: LitJson.JsonMockWrapper.GetString*
  implements:
  - LitJson.IJsonWrapper.GetString
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: LitJson.JsonMockWrapper.SetBoolean(System.Boolean)
  commentId: M:LitJson.JsonMockWrapper.SetBoolean(System.Boolean)
  id: SetBoolean(System.Boolean)
  parent: LitJson.JsonMockWrapper
  langs:
  - csharp
  - vb
  name: SetBoolean(Boolean)
  nameWithType: JsonMockWrapper.SetBoolean(Boolean)
  fullName: LitJson.JsonMockWrapper.SetBoolean(System.Boolean)
  type: Method
  source:
    remote:
      path: Source/JsonMockWrapper.cs
      branch: master
      repo: https://github.com/MacacaGames/UnityLitJson.git
    id: SetBoolean
    path: ../Source/JsonMockWrapper.cs
    startLine: 30
  assemblies:
  - UnityLitJson
  namespace: LitJson
  syntax:
    content: public void SetBoolean(bool val)
    parameters:
    - id: val
      type: System.Boolean
    content.vb: Public Sub SetBoolean(val As Boolean)
  overload: LitJson.JsonMockWrapper.SetBoolean*
  implements:
  - LitJson.IJsonWrapper.SetBoolean(System.Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: LitJson.JsonMockWrapper.SetReal(System.Double)
  commentId: M:LitJson.JsonMockWrapper.SetReal(System.Double)
  id: SetReal(System.Double)
  parent: LitJson.JsonMockWrapper
  langs:
  - csharp
  - vb
  name: SetReal(Double)
  nameWithType: JsonMockWrapper.SetReal(Double)
  fullName: LitJson.JsonMockWrapper.SetReal(System.Double)
  type: Method
  source:
    remote:
      path: Source/JsonMockWrapper.cs
      branch: master
      repo: https://github.com/MacacaGames/UnityLitJson.git
    id: SetReal
    path: ../Source/JsonMockWrapper.cs
    startLine: 31
  assemblies:
  - UnityLitJson
  namespace: LitJson
  syntax:
    content: public void SetReal(double val)
    parameters:
    - id: val
      type: System.Double
    content.vb: Public Sub SetReal(val As Double)
  overload: LitJson.JsonMockWrapper.SetReal*
  implements:
  - LitJson.IJsonWrapper.SetReal(System.Double)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: LitJson.JsonMockWrapper.SetNatural(System.Int64)
  commentId: M:LitJson.JsonMockWrapper.SetNatural(System.Int64)
  id: SetNatural(System.Int64)
  parent: LitJson.JsonMockWrapper
  langs:
  - csharp
  - vb
  name: SetNatural(Int64)
  nameWithType: JsonMockWrapper.SetNatural(Int64)
  fullName: LitJson.JsonMockWrapper.SetNatural(System.Int64)
  type: Method
  source:
    remote:
      path: Source/JsonMockWrapper.cs
      branch: master
      repo: https://github.com/MacacaGames/UnityLitJson.git
    id: SetNatural
    path: ../Source/JsonMockWrapper.cs
    startLine: 32
  assemblies:
  - UnityLitJson
  namespace: LitJson
  syntax:
    content: public void SetNatural(long val)
    parameters:
    - id: val
      type: System.Int64
    content.vb: Public Sub SetNatural(val As Long)
  overload: LitJson.JsonMockWrapper.SetNatural*
  implements:
  - LitJson.IJsonWrapper.SetNatural(System.Int64)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: LitJson.JsonMockWrapper.SetJsonType(LitJson.JsonType)
  commentId: M:LitJson.JsonMockWrapper.SetJsonType(LitJson.JsonType)
  id: SetJsonType(LitJson.JsonType)
  parent: LitJson.JsonMockWrapper
  langs:
  - csharp
  - vb
  name: SetJsonType(JsonType)
  nameWithType: JsonMockWrapper.SetJsonType(JsonType)
  fullName: LitJson.JsonMockWrapper.SetJsonType(LitJson.JsonType)
  type: Method
  source:
    remote:
      path: Source/JsonMockWrapper.cs
      branch: master
      repo: https://github.com/MacacaGames/UnityLitJson.git
    id: SetJsonType
    path: ../Source/JsonMockWrapper.cs
    startLine: 33
  assemblies:
  - UnityLitJson
  namespace: LitJson
  syntax:
    content: public void SetJsonType(JsonType type)
    parameters:
    - id: type
      type: LitJson.JsonType
    content.vb: Public Sub SetJsonType(type As JsonType)
  overload: LitJson.JsonMockWrapper.SetJsonType*
  implements:
  - LitJson.IJsonWrapper.SetJsonType(LitJson.JsonType)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: LitJson.JsonMockWrapper.SetString(System.String)
  commentId: M:LitJson.JsonMockWrapper.SetString(System.String)
  id: SetString(System.String)
  parent: LitJson.JsonMockWrapper
  langs:
  - csharp
  - vb
  name: SetString(String)
  nameWithType: JsonMockWrapper.SetString(String)
  fullName: LitJson.JsonMockWrapper.SetString(System.String)
  type: Method
  source:
    remote:
      path: Source/JsonMockWrapper.cs
      branch: master
      repo: https://github.com/MacacaGames/UnityLitJson.git
    id: SetString
    path: ../Source/JsonMockWrapper.cs
    startLine: 34
  assemblies:
  - UnityLitJson
  namespace: LitJson
  syntax:
    content: public void SetString(string val)
    parameters:
    - id: val
      type: System.String
    content.vb: Public Sub SetString(val As String)
  overload: LitJson.JsonMockWrapper.SetString*
  implements:
  - LitJson.IJsonWrapper.SetString(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: LitJson.JsonMockWrapper.ToJson
  commentId: M:LitJson.JsonMockWrapper.ToJson
  id: ToJson
  parent: LitJson.JsonMockWrapper
  langs:
  - csharp
  - vb
  name: ToJson()
  nameWithType: JsonMockWrapper.ToJson()
  fullName: LitJson.JsonMockWrapper.ToJson()
  type: Method
  source:
    remote:
      path: Source/JsonMockWrapper.cs
      branch: master
      repo: https://github.com/MacacaGames/UnityLitJson.git
    id: ToJson
    path: ../Source/JsonMockWrapper.cs
    startLine: 36
  assemblies:
  - UnityLitJson
  namespace: LitJson
  syntax:
    content: public string ToJson()
    return:
      type: System.String
    content.vb: Public Function ToJson As String
  overload: LitJson.JsonMockWrapper.ToJson*
  implements:
  - LitJson.IJsonWrapper.ToJson
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: LitJson.JsonMockWrapper.ToJson(LitJson.JsonWriter)
  commentId: M:LitJson.JsonMockWrapper.ToJson(LitJson.JsonWriter)
  id: ToJson(LitJson.JsonWriter)
  parent: LitJson.JsonMockWrapper
  langs:
  - csharp
  - vb
  name: ToJson(JsonWriter)
  nameWithType: JsonMockWrapper.ToJson(JsonWriter)
  fullName: LitJson.JsonMockWrapper.ToJson(LitJson.JsonWriter)
  type: Method
  source:
    remote:
      path: Source/JsonMockWrapper.cs
      branch: master
      repo: https://github.com/MacacaGames/UnityLitJson.git
    id: ToJson
    path: ../Source/JsonMockWrapper.cs
    startLine: 37
  assemblies:
  - UnityLitJson
  namespace: LitJson
  syntax:
    content: public void ToJson(JsonWriter writer)
    parameters:
    - id: writer
      type: LitJson.JsonWriter
    content.vb: Public Sub ToJson(writer As JsonWriter)
  overload: LitJson.JsonMockWrapper.ToJson*
  implements:
  - LitJson.IJsonWrapper.ToJson(LitJson.JsonWriter)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: LitJson.JsonMockWrapper.System#Collections#IList#IsFixedSize
  commentId: P:LitJson.JsonMockWrapper.System#Collections#IList#IsFixedSize
  id: System#Collections#IList#IsFixedSize
  isEii: true
  parent: LitJson.JsonMockWrapper
  langs:
  - csharp
  - vb
  name: IList.IsFixedSize
  nameWithType: JsonMockWrapper.IList.IsFixedSize
  fullName: LitJson.JsonMockWrapper.System.Collections.IList.IsFixedSize
  type: Property
  source:
    remote:
      path: Source/JsonMockWrapper.cs
      branch: master
      repo: https://github.com/MacacaGames/UnityLitJson.git
    id: System.Collections.IList.IsFixedSize
    path: ../Source/JsonMockWrapper.cs
    startLine: 39
  assemblies:
  - UnityLitJson
  namespace: LitJson
  syntax:
    content: bool IList.IsFixedSize { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly WriteOnly Property System.Collections.IList.IsFixedSize As Boolean Implements IList.IsFixedSize
  overload: LitJson.JsonMockWrapper.System#Collections#IList#IsFixedSize*
  implements:
  - System.Collections.IList.IsFixedSize
  nameWithType.vb: JsonMockWrapper.System.Collections.IList.IsFixedSize
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: System.Collections.IList.IsFixedSize
- uid: LitJson.JsonMockWrapper.System#Collections#IList#IsReadOnly
  commentId: P:LitJson.JsonMockWrapper.System#Collections#IList#IsReadOnly
  id: System#Collections#IList#IsReadOnly
  isEii: true
  parent: LitJson.JsonMockWrapper
  langs:
  - csharp
  - vb
  name: IList.IsReadOnly
  nameWithType: JsonMockWrapper.IList.IsReadOnly
  fullName: LitJson.JsonMockWrapper.System.Collections.IList.IsReadOnly
  type: Property
  source:
    remote:
      path: Source/JsonMockWrapper.cs
      branch: master
      repo: https://github.com/MacacaGames/UnityLitJson.git
    id: System.Collections.IList.IsReadOnly
    path: ../Source/JsonMockWrapper.cs
    startLine: 40
  assemblies:
  - UnityLitJson
  namespace: LitJson
  syntax:
    content: bool IList.IsReadOnly { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly WriteOnly Property System.Collections.IList.IsReadOnly As Boolean Implements IList.IsReadOnly
  overload: LitJson.JsonMockWrapper.System#Collections#IList#IsReadOnly*
  implements:
  - System.Collections.IList.IsReadOnly
  nameWithType.vb: JsonMockWrapper.System.Collections.IList.IsReadOnly
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: System.Collections.IList.IsReadOnly
- uid: LitJson.JsonMockWrapper.System#Collections#IList#Item(System.Int32)
  commentId: P:LitJson.JsonMockWrapper.System#Collections#IList#Item(System.Int32)
  id: System#Collections#IList#Item(System.Int32)
  isEii: true
  parent: LitJson.JsonMockWrapper
  langs:
  - csharp
  - vb
  name: IList.Item[Int32]
  nameWithType: JsonMockWrapper.IList.Item[Int32]
  fullName: LitJson.JsonMockWrapper.System.Collections.IList.Item[System.Int32]
  type: Property
  source:
    remote:
      path: Source/JsonMockWrapper.cs
      branch: master
      repo: https://github.com/MacacaGames/UnityLitJson.git
    id: System.Collections.IList.this[]
    path: ../Source/JsonMockWrapper.cs
    startLine: 42
  assemblies:
  - UnityLitJson
  namespace: LitJson
  syntax:
    content: object IList.this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
    return:
      type: System.Object
    content.vb: ReadOnly WriteOnly Property System.Collections.IList.Item(index As Integer) As Object Implements IList.this[]
  overload: LitJson.JsonMockWrapper.System#Collections#IList#Item*
  implements:
  - System.Collections.IList.Item(System.Int32)
  nameWithType.vb: JsonMockWrapper.System.Collections.IList.Item(Int32)
  modifiers.csharp:
  - get
  - set
  fullName.vb: LitJson.JsonMockWrapper.System.Collections.IList.Item(System.Int32)
  name.vb: System.Collections.IList.Item(Int32)
- uid: LitJson.JsonMockWrapper.System#Collections#IList#Add(System.Object)
  commentId: M:LitJson.JsonMockWrapper.System#Collections#IList#Add(System.Object)
  id: System#Collections#IList#Add(System.Object)
  isEii: true
  parent: LitJson.JsonMockWrapper
  langs:
  - csharp
  - vb
  name: IList.Add(Object)
  nameWithType: JsonMockWrapper.IList.Add(Object)
  fullName: LitJson.JsonMockWrapper.System.Collections.IList.Add(System.Object)
  type: Method
  source:
    remote:
      path: Source/JsonMockWrapper.cs
      branch: master
      repo: https://github.com/MacacaGames/UnityLitJson.git
    id: System.Collections.IList.Add
    path: ../Source/JsonMockWrapper.cs
    startLine: 47
  assemblies:
  - UnityLitJson
  namespace: LitJson
  syntax:
    content: int IList.Add(object value)
    parameters:
    - id: value
      type: System.Object
    return:
      type: System.Int32
    content.vb: Function System.Collections.IList.Add(value As Object) As Integer Implements IList.Add
  overload: LitJson.JsonMockWrapper.System#Collections#IList#Add*
  implements:
  - System.Collections.IList.Add(System.Object)
  nameWithType.vb: JsonMockWrapper.System.Collections.IList.Add(Object)
  name.vb: System.Collections.IList.Add(Object)
- uid: LitJson.JsonMockWrapper.System#Collections#IList#Clear
  commentId: M:LitJson.JsonMockWrapper.System#Collections#IList#Clear
  id: System#Collections#IList#Clear
  isEii: true
  parent: LitJson.JsonMockWrapper
  langs:
  - csharp
  - vb
  name: IList.Clear()
  nameWithType: JsonMockWrapper.IList.Clear()
  fullName: LitJson.JsonMockWrapper.System.Collections.IList.Clear()
  type: Method
  source:
    remote:
      path: Source/JsonMockWrapper.cs
      branch: master
      repo: https://github.com/MacacaGames/UnityLitJson.git
    id: System.Collections.IList.Clear
    path: ../Source/JsonMockWrapper.cs
    startLine: 48
  assemblies:
  - UnityLitJson
  namespace: LitJson
  syntax:
    content: void IList.Clear()
    content.vb: Sub System.Collections.IList.Clear Implements IList.Clear
  overload: LitJson.JsonMockWrapper.System#Collections#IList#Clear*
  implements:
  - System.Collections.IList.Clear
  nameWithType.vb: JsonMockWrapper.System.Collections.IList.Clear()
  name.vb: System.Collections.IList.Clear()
- uid: LitJson.JsonMockWrapper.System#Collections#IList#Contains(System.Object)
  commentId: M:LitJson.JsonMockWrapper.System#Collections#IList#Contains(System.Object)
  id: System#Collections#IList#Contains(System.Object)
  isEii: true
  parent: LitJson.JsonMockWrapper
  langs:
  - csharp
  - vb
  name: IList.Contains(Object)
  nameWithType: JsonMockWrapper.IList.Contains(Object)
  fullName: LitJson.JsonMockWrapper.System.Collections.IList.Contains(System.Object)
  type: Method
  source:
    remote:
      path: Source/JsonMockWrapper.cs
      branch: master
      repo: https://github.com/MacacaGames/UnityLitJson.git
    id: System.Collections.IList.Contains
    path: ../Source/JsonMockWrapper.cs
    startLine: 49
  assemblies:
  - UnityLitJson
  namespace: LitJson
  syntax:
    content: bool IList.Contains(object value)
    parameters:
    - id: value
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Function System.Collections.IList.Contains(value As Object) As Boolean Implements IList.Contains
  overload: LitJson.JsonMockWrapper.System#Collections#IList#Contains*
  implements:
  - System.Collections.IList.Contains(System.Object)
  nameWithType.vb: JsonMockWrapper.System.Collections.IList.Contains(Object)
  name.vb: System.Collections.IList.Contains(Object)
- uid: LitJson.JsonMockWrapper.System#Collections#IList#IndexOf(System.Object)
  commentId: M:LitJson.JsonMockWrapper.System#Collections#IList#IndexOf(System.Object)
  id: System#Collections#IList#IndexOf(System.Object)
  isEii: true
  parent: LitJson.JsonMockWrapper
  langs:
  - csharp
  - vb
  name: IList.IndexOf(Object)
  nameWithType: JsonMockWrapper.IList.IndexOf(Object)
  fullName: LitJson.JsonMockWrapper.System.Collections.IList.IndexOf(System.Object)
  type: Method
  source:
    remote:
      path: Source/JsonMockWrapper.cs
      branch: master
      repo: https://github.com/MacacaGames/UnityLitJson.git
    id: System.Collections.IList.IndexOf
    path: ../Source/JsonMockWrapper.cs
    startLine: 50
  assemblies:
  - UnityLitJson
  namespace: LitJson
  syntax:
    content: int IList.IndexOf(object value)
    parameters:
    - id: value
      type: System.Object
    return:
      type: System.Int32
    content.vb: Function System.Collections.IList.IndexOf(value As Object) As Integer Implements IList.IndexOf
  overload: LitJson.JsonMockWrapper.System#Collections#IList#IndexOf*
  implements:
  - System.Collections.IList.IndexOf(System.Object)
  nameWithType.vb: JsonMockWrapper.System.Collections.IList.IndexOf(Object)
  name.vb: System.Collections.IList.IndexOf(Object)
- uid: LitJson.JsonMockWrapper.System#Collections#IList#Insert(System.Int32,System.Object)
  commentId: M:LitJson.JsonMockWrapper.System#Collections#IList#Insert(System.Int32,System.Object)
  id: System#Collections#IList#Insert(System.Int32,System.Object)
  isEii: true
  parent: LitJson.JsonMockWrapper
  langs:
  - csharp
  - vb
  name: IList.Insert(Int32, Object)
  nameWithType: JsonMockWrapper.IList.Insert(Int32, Object)
  fullName: LitJson.JsonMockWrapper.System.Collections.IList.Insert(System.Int32, System.Object)
  type: Method
  source:
    remote:
      path: Source/JsonMockWrapper.cs
      branch: master
      repo: https://github.com/MacacaGames/UnityLitJson.git
    id: System.Collections.IList.Insert
    path: ../Source/JsonMockWrapper.cs
    startLine: 51
  assemblies:
  - UnityLitJson
  namespace: LitJson
  syntax:
    content: void IList.Insert(int i, object v)
    parameters:
    - id: i
      type: System.Int32
    - id: v
      type: System.Object
    content.vb: Sub System.Collections.IList.Insert(i As Integer, v As Object) Implements IList.Insert
  overload: LitJson.JsonMockWrapper.System#Collections#IList#Insert*
  implements:
  - System.Collections.IList.Insert(System.Int32,System.Object)
  nameWithType.vb: JsonMockWrapper.System.Collections.IList.Insert(Int32, Object)
  name.vb: System.Collections.IList.Insert(Int32, Object)
- uid: LitJson.JsonMockWrapper.System#Collections#IList#Remove(System.Object)
  commentId: M:LitJson.JsonMockWrapper.System#Collections#IList#Remove(System.Object)
  id: System#Collections#IList#Remove(System.Object)
  isEii: true
  parent: LitJson.JsonMockWrapper
  langs:
  - csharp
  - vb
  name: IList.Remove(Object)
  nameWithType: JsonMockWrapper.IList.Remove(Object)
  fullName: LitJson.JsonMockWrapper.System.Collections.IList.Remove(System.Object)
  type: Method
  source:
    remote:
      path: Source/JsonMockWrapper.cs
      branch: master
      repo: https://github.com/MacacaGames/UnityLitJson.git
    id: System.Collections.IList.Remove
    path: ../Source/JsonMockWrapper.cs
    startLine: 52
  assemblies:
  - UnityLitJson
  namespace: LitJson
  syntax:
    content: void IList.Remove(object value)
    parameters:
    - id: value
      type: System.Object
    content.vb: Sub System.Collections.IList.Remove(value As Object) Implements IList.Remove
  overload: LitJson.JsonMockWrapper.System#Collections#IList#Remove*
  implements:
  - System.Collections.IList.Remove(System.Object)
  nameWithType.vb: JsonMockWrapper.System.Collections.IList.Remove(Object)
  name.vb: System.Collections.IList.Remove(Object)
- uid: LitJson.JsonMockWrapper.System#Collections#IList#RemoveAt(System.Int32)
  commentId: M:LitJson.JsonMockWrapper.System#Collections#IList#RemoveAt(System.Int32)
  id: System#Collections#IList#RemoveAt(System.Int32)
  isEii: true
  parent: LitJson.JsonMockWrapper
  langs:
  - csharp
  - vb
  name: IList.RemoveAt(Int32)
  nameWithType: JsonMockWrapper.IList.RemoveAt(Int32)
  fullName: LitJson.JsonMockWrapper.System.Collections.IList.RemoveAt(System.Int32)
  type: Method
  source:
    remote:
      path: Source/JsonMockWrapper.cs
      branch: master
      repo: https://github.com/MacacaGames/UnityLitJson.git
    id: System.Collections.IList.RemoveAt
    path: ../Source/JsonMockWrapper.cs
    startLine: 53
  assemblies:
  - UnityLitJson
  namespace: LitJson
  syntax:
    content: void IList.RemoveAt(int index)
    parameters:
    - id: index
      type: System.Int32
    content.vb: Sub System.Collections.IList.RemoveAt(index As Integer) Implements IList.RemoveAt
  overload: LitJson.JsonMockWrapper.System#Collections#IList#RemoveAt*
  implements:
  - System.Collections.IList.RemoveAt(System.Int32)
  nameWithType.vb: JsonMockWrapper.System.Collections.IList.RemoveAt(Int32)
  name.vb: System.Collections.IList.RemoveAt(Int32)
- uid: LitJson.JsonMockWrapper.System#Collections#ICollection#Count
  commentId: P:LitJson.JsonMockWrapper.System#Collections#ICollection#Count
  id: System#Collections#ICollection#Count
  isEii: true
  parent: LitJson.JsonMockWrapper
  langs:
  - csharp
  - vb
  name: ICollection.Count
  nameWithType: JsonMockWrapper.ICollection.Count
  fullName: LitJson.JsonMockWrapper.System.Collections.ICollection.Count
  type: Property
  source:
    remote:
      path: Source/JsonMockWrapper.cs
      branch: master
      repo: https://github.com/MacacaGames/UnityLitJson.git
    id: System.Collections.ICollection.Count
    path: ../Source/JsonMockWrapper.cs
    startLine: 55
  assemblies:
  - UnityLitJson
  namespace: LitJson
  syntax:
    content: int ICollection.Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: ReadOnly WriteOnly Property System.Collections.ICollection.Count As Integer Implements ICollection.Count
  overload: LitJson.JsonMockWrapper.System#Collections#ICollection#Count*
  implements:
  - System.Collections.ICollection.Count
  nameWithType.vb: JsonMockWrapper.System.Collections.ICollection.Count
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: System.Collections.ICollection.Count
- uid: LitJson.JsonMockWrapper.System#Collections#ICollection#IsSynchronized
  commentId: P:LitJson.JsonMockWrapper.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: LitJson.JsonMockWrapper
  langs:
  - csharp
  - vb
  name: ICollection.IsSynchronized
  nameWithType: JsonMockWrapper.ICollection.IsSynchronized
  fullName: LitJson.JsonMockWrapper.System.Collections.ICollection.IsSynchronized
  type: Property
  source:
    remote:
      path: Source/JsonMockWrapper.cs
      branch: master
      repo: https://github.com/MacacaGames/UnityLitJson.git
    id: System.Collections.ICollection.IsSynchronized
    path: ../Source/JsonMockWrapper.cs
    startLine: 56
  assemblies:
  - UnityLitJson
  namespace: LitJson
  syntax:
    content: bool ICollection.IsSynchronized { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly WriteOnly Property System.Collections.ICollection.IsSynchronized As Boolean Implements ICollection.IsSynchronized
  overload: LitJson.JsonMockWrapper.System#Collections#ICollection#IsSynchronized*
  implements:
  - System.Collections.ICollection.IsSynchronized
  nameWithType.vb: JsonMockWrapper.System.Collections.ICollection.IsSynchronized
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: System.Collections.ICollection.IsSynchronized
- uid: LitJson.JsonMockWrapper.System#Collections#ICollection#SyncRoot
  commentId: P:LitJson.JsonMockWrapper.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: LitJson.JsonMockWrapper
  langs:
  - csharp
  - vb
  name: ICollection.SyncRoot
  nameWithType: JsonMockWrapper.ICollection.SyncRoot
  fullName: LitJson.JsonMockWrapper.System.Collections.ICollection.SyncRoot
  type: Property
  source:
    remote:
      path: Source/JsonMockWrapper.cs
      branch: master
      repo: https://github.com/MacacaGames/UnityLitJson.git
    id: System.Collections.ICollection.SyncRoot
    path: ../Source/JsonMockWrapper.cs
    startLine: 57
  assemblies:
  - UnityLitJson
  namespace: LitJson
  syntax:
    content: object ICollection.SyncRoot { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: ReadOnly WriteOnly Property System.Collections.ICollection.SyncRoot As Object Implements ICollection.SyncRoot
  overload: LitJson.JsonMockWrapper.System#Collections#ICollection#SyncRoot*
  implements:
  - System.Collections.ICollection.SyncRoot
  nameWithType.vb: JsonMockWrapper.System.Collections.ICollection.SyncRoot
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: System.Collections.ICollection.SyncRoot
- uid: LitJson.JsonMockWrapper.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  commentId: M:LitJson.JsonMockWrapper.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: LitJson.JsonMockWrapper
  langs:
  - csharp
  - vb
  name: ICollection.CopyTo(Array, Int32)
  nameWithType: JsonMockWrapper.ICollection.CopyTo(Array, Int32)
  fullName: LitJson.JsonMockWrapper.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  type: Method
  source:
    remote:
      path: Source/JsonMockWrapper.cs
      branch: master
      repo: https://github.com/MacacaGames/UnityLitJson.git
    id: System.Collections.ICollection.CopyTo
    path: ../Source/JsonMockWrapper.cs
    startLine: 59
  assemblies:
  - UnityLitJson
  namespace: LitJson
  syntax:
    content: void ICollection.CopyTo(Array array, int index)
    parameters:
    - id: array
      type: System.Array
    - id: index
      type: System.Int32
    content.vb: Sub System.Collections.ICollection.CopyTo(array As Array, index As Integer) Implements ICollection.CopyTo
  overload: LitJson.JsonMockWrapper.System#Collections#ICollection#CopyTo*
  implements:
  - System.Collections.ICollection.CopyTo(System.Array,System.Int32)
  nameWithType.vb: JsonMockWrapper.System.Collections.ICollection.CopyTo(Array, Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
- uid: LitJson.JsonMockWrapper.System#Collections#IEnumerable#GetEnumerator
  commentId: M:LitJson.JsonMockWrapper.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: LitJson.JsonMockWrapper
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  nameWithType: JsonMockWrapper.IEnumerable.GetEnumerator()
  fullName: LitJson.JsonMockWrapper.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote:
      path: Source/JsonMockWrapper.cs
      branch: master
      repo: https://github.com/MacacaGames/UnityLitJson.git
    id: System.Collections.IEnumerable.GetEnumerator
    path: ../Source/JsonMockWrapper.cs
    startLine: 61
  assemblies:
  - UnityLitJson
  namespace: LitJson
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    return:
      type: System.Collections.IEnumerator
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
  overload: LitJson.JsonMockWrapper.System#Collections#IEnumerable#GetEnumerator*
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: JsonMockWrapper.System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
- uid: LitJson.JsonMockWrapper.System#Collections#IDictionary#IsFixedSize
  commentId: P:LitJson.JsonMockWrapper.System#Collections#IDictionary#IsFixedSize
  id: System#Collections#IDictionary#IsFixedSize
  isEii: true
  parent: LitJson.JsonMockWrapper
  langs:
  - csharp
  - vb
  name: IDictionary.IsFixedSize
  nameWithType: JsonMockWrapper.IDictionary.IsFixedSize
  fullName: LitJson.JsonMockWrapper.System.Collections.IDictionary.IsFixedSize
  type: Property
  source:
    remote:
      path: Source/JsonMockWrapper.cs
      branch: master
      repo: https://github.com/MacacaGames/UnityLitJson.git
    id: System.Collections.IDictionary.IsFixedSize
    path: ../Source/JsonMockWrapper.cs
    startLine: 63
  assemblies:
  - UnityLitJson
  namespace: LitJson
  syntax:
    content: bool IDictionary.IsFixedSize { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly WriteOnly Property System.Collections.IDictionary.IsFixedSize As Boolean Implements IDictionary.IsFixedSize
  overload: LitJson.JsonMockWrapper.System#Collections#IDictionary#IsFixedSize*
  implements:
  - System.Collections.IDictionary.IsFixedSize
  nameWithType.vb: JsonMockWrapper.System.Collections.IDictionary.IsFixedSize
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: System.Collections.IDictionary.IsFixedSize
- uid: LitJson.JsonMockWrapper.System#Collections#IDictionary#IsReadOnly
  commentId: P:LitJson.JsonMockWrapper.System#Collections#IDictionary#IsReadOnly
  id: System#Collections#IDictionary#IsReadOnly
  isEii: true
  parent: LitJson.JsonMockWrapper
  langs:
  - csharp
  - vb
  name: IDictionary.IsReadOnly
  nameWithType: JsonMockWrapper.IDictionary.IsReadOnly
  fullName: LitJson.JsonMockWrapper.System.Collections.IDictionary.IsReadOnly
  type: Property
  source:
    remote:
      path: Source/JsonMockWrapper.cs
      branch: master
      repo: https://github.com/MacacaGames/UnityLitJson.git
    id: System.Collections.IDictionary.IsReadOnly
    path: ../Source/JsonMockWrapper.cs
    startLine: 64
  assemblies:
  - UnityLitJson
  namespace: LitJson
  syntax:
    content: bool IDictionary.IsReadOnly { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly WriteOnly Property System.Collections.IDictionary.IsReadOnly As Boolean Implements IDictionary.IsReadOnly
  overload: LitJson.JsonMockWrapper.System#Collections#IDictionary#IsReadOnly*
  implements:
  - System.Collections.IDictionary.IsReadOnly
  nameWithType.vb: JsonMockWrapper.System.Collections.IDictionary.IsReadOnly
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: System.Collections.IDictionary.IsReadOnly
- uid: LitJson.JsonMockWrapper.System#Collections#IDictionary#Keys
  commentId: P:LitJson.JsonMockWrapper.System#Collections#IDictionary#Keys
  id: System#Collections#IDictionary#Keys
  isEii: true
  parent: LitJson.JsonMockWrapper
  langs:
  - csharp
  - vb
  name: IDictionary.Keys
  nameWithType: JsonMockWrapper.IDictionary.Keys
  fullName: LitJson.JsonMockWrapper.System.Collections.IDictionary.Keys
  type: Property
  source:
    remote:
      path: Source/JsonMockWrapper.cs
      branch: master
      repo: https://github.com/MacacaGames/UnityLitJson.git
    id: System.Collections.IDictionary.Keys
    path: ../Source/JsonMockWrapper.cs
    startLine: 66
  assemblies:
  - UnityLitJson
  namespace: LitJson
  syntax:
    content: ICollection IDictionary.Keys { get; }
    parameters: []
    return:
      type: System.Collections.ICollection
    content.vb: ReadOnly WriteOnly Property System.Collections.IDictionary.Keys As ICollection Implements IDictionary.Keys
  overload: LitJson.JsonMockWrapper.System#Collections#IDictionary#Keys*
  implements:
  - System.Collections.IDictionary.Keys
  nameWithType.vb: JsonMockWrapper.System.Collections.IDictionary.Keys
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: System.Collections.IDictionary.Keys
- uid: LitJson.JsonMockWrapper.System#Collections#IDictionary#Values
  commentId: P:LitJson.JsonMockWrapper.System#Collections#IDictionary#Values
  id: System#Collections#IDictionary#Values
  isEii: true
  parent: LitJson.JsonMockWrapper
  langs:
  - csharp
  - vb
  name: IDictionary.Values
  nameWithType: JsonMockWrapper.IDictionary.Values
  fullName: LitJson.JsonMockWrapper.System.Collections.IDictionary.Values
  type: Property
  source:
    remote:
      path: Source/JsonMockWrapper.cs
      branch: master
      repo: https://github.com/MacacaGames/UnityLitJson.git
    id: System.Collections.IDictionary.Values
    path: ../Source/JsonMockWrapper.cs
    startLine: 67
  assemblies:
  - UnityLitJson
  namespace: LitJson
  syntax:
    content: ICollection IDictionary.Values { get; }
    parameters: []
    return:
      type: System.Collections.ICollection
    content.vb: ReadOnly WriteOnly Property System.Collections.IDictionary.Values As ICollection Implements IDictionary.Values
  overload: LitJson.JsonMockWrapper.System#Collections#IDictionary#Values*
  implements:
  - System.Collections.IDictionary.Values
  nameWithType.vb: JsonMockWrapper.System.Collections.IDictionary.Values
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: System.Collections.IDictionary.Values
- uid: LitJson.JsonMockWrapper.System#Collections#IDictionary#Item(System.Object)
  commentId: P:LitJson.JsonMockWrapper.System#Collections#IDictionary#Item(System.Object)
  id: System#Collections#IDictionary#Item(System.Object)
  isEii: true
  parent: LitJson.JsonMockWrapper
  langs:
  - csharp
  - vb
  name: IDictionary.Item[Object]
  nameWithType: JsonMockWrapper.IDictionary.Item[Object]
  fullName: LitJson.JsonMockWrapper.System.Collections.IDictionary.Item[System.Object]
  type: Property
  source:
    remote:
      path: Source/JsonMockWrapper.cs
      branch: master
      repo: https://github.com/MacacaGames/UnityLitJson.git
    id: System.Collections.IDictionary.this[]
    path: ../Source/JsonMockWrapper.cs
    startLine: 69
  assemblies:
  - UnityLitJson
  namespace: LitJson
  syntax:
    content: object IDictionary.this[object key] { get; set; }
    parameters:
    - id: key
      type: System.Object
    return:
      type: System.Object
    content.vb: ReadOnly WriteOnly Property System.Collections.IDictionary.Item(key As Object) As Object Implements IDictionary.this[]
  overload: LitJson.JsonMockWrapper.System#Collections#IDictionary#Item*
  implements:
  - System.Collections.IDictionary.Item(System.Object)
  nameWithType.vb: JsonMockWrapper.System.Collections.IDictionary.Item(Object)
  modifiers.csharp:
  - get
  - set
  fullName.vb: LitJson.JsonMockWrapper.System.Collections.IDictionary.Item(System.Object)
  name.vb: System.Collections.IDictionary.Item(Object)
- uid: LitJson.JsonMockWrapper.System#Collections#IDictionary#Add(System.Object,System.Object)
  commentId: M:LitJson.JsonMockWrapper.System#Collections#IDictionary#Add(System.Object,System.Object)
  id: System#Collections#IDictionary#Add(System.Object,System.Object)
  isEii: true
  parent: LitJson.JsonMockWrapper
  langs:
  - csharp
  - vb
  name: IDictionary.Add(Object, Object)
  nameWithType: JsonMockWrapper.IDictionary.Add(Object, Object)
  fullName: LitJson.JsonMockWrapper.System.Collections.IDictionary.Add(System.Object, System.Object)
  type: Method
  source:
    remote:
      path: Source/JsonMockWrapper.cs
      branch: master
      repo: https://github.com/MacacaGames/UnityLitJson.git
    id: System.Collections.IDictionary.Add
    path: ../Source/JsonMockWrapper.cs
    startLine: 74
  assemblies:
  - UnityLitJson
  namespace: LitJson
  syntax:
    content: void IDictionary.Add(object k, object v)
    parameters:
    - id: k
      type: System.Object
    - id: v
      type: System.Object
    content.vb: Sub System.Collections.IDictionary.Add(k As Object, v As Object) Implements IDictionary.Add
  overload: LitJson.JsonMockWrapper.System#Collections#IDictionary#Add*
  implements:
  - System.Collections.IDictionary.Add(System.Object,System.Object)
  nameWithType.vb: JsonMockWrapper.System.Collections.IDictionary.Add(Object, Object)
  name.vb: System.Collections.IDictionary.Add(Object, Object)
- uid: LitJson.JsonMockWrapper.System#Collections#IDictionary#Clear
  commentId: M:LitJson.JsonMockWrapper.System#Collections#IDictionary#Clear
  id: System#Collections#IDictionary#Clear
  isEii: true
  parent: LitJson.JsonMockWrapper
  langs:
  - csharp
  - vb
  name: IDictionary.Clear()
  nameWithType: JsonMockWrapper.IDictionary.Clear()
  fullName: LitJson.JsonMockWrapper.System.Collections.IDictionary.Clear()
  type: Method
  source:
    remote:
      path: Source/JsonMockWrapper.cs
      branch: master
      repo: https://github.com/MacacaGames/UnityLitJson.git
    id: System.Collections.IDictionary.Clear
    path: ../Source/JsonMockWrapper.cs
    startLine: 75
  assemblies:
  - UnityLitJson
  namespace: LitJson
  syntax:
    content: void IDictionary.Clear()
    content.vb: Sub System.Collections.IDictionary.Clear Implements IDictionary.Clear
  overload: LitJson.JsonMockWrapper.System#Collections#IDictionary#Clear*
  implements:
  - System.Collections.IDictionary.Clear
  nameWithType.vb: JsonMockWrapper.System.Collections.IDictionary.Clear()
  name.vb: System.Collections.IDictionary.Clear()
- uid: LitJson.JsonMockWrapper.System#Collections#IDictionary#Contains(System.Object)
  commentId: M:LitJson.JsonMockWrapper.System#Collections#IDictionary#Contains(System.Object)
  id: System#Collections#IDictionary#Contains(System.Object)
  isEii: true
  parent: LitJson.JsonMockWrapper
  langs:
  - csharp
  - vb
  name: IDictionary.Contains(Object)
  nameWithType: JsonMockWrapper.IDictionary.Contains(Object)
  fullName: LitJson.JsonMockWrapper.System.Collections.IDictionary.Contains(System.Object)
  type: Method
  source:
    remote:
      path: Source/JsonMockWrapper.cs
      branch: master
      repo: https://github.com/MacacaGames/UnityLitJson.git
    id: System.Collections.IDictionary.Contains
    path: ../Source/JsonMockWrapper.cs
    startLine: 76
  assemblies:
  - UnityLitJson
  namespace: LitJson
  syntax:
    content: bool IDictionary.Contains(object key)
    parameters:
    - id: key
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Function System.Collections.IDictionary.Contains(key As Object) As Boolean Implements IDictionary.Contains
  overload: LitJson.JsonMockWrapper.System#Collections#IDictionary#Contains*
  implements:
  - System.Collections.IDictionary.Contains(System.Object)
  nameWithType.vb: JsonMockWrapper.System.Collections.IDictionary.Contains(Object)
  name.vb: System.Collections.IDictionary.Contains(Object)
- uid: LitJson.JsonMockWrapper.System#Collections#IDictionary#Remove(System.Object)
  commentId: M:LitJson.JsonMockWrapper.System#Collections#IDictionary#Remove(System.Object)
  id: System#Collections#IDictionary#Remove(System.Object)
  isEii: true
  parent: LitJson.JsonMockWrapper
  langs:
  - csharp
  - vb
  name: IDictionary.Remove(Object)
  nameWithType: JsonMockWrapper.IDictionary.Remove(Object)
  fullName: LitJson.JsonMockWrapper.System.Collections.IDictionary.Remove(System.Object)
  type: Method
  source:
    remote:
      path: Source/JsonMockWrapper.cs
      branch: master
      repo: https://github.com/MacacaGames/UnityLitJson.git
    id: System.Collections.IDictionary.Remove
    path: ../Source/JsonMockWrapper.cs
    startLine: 77
  assemblies:
  - UnityLitJson
  namespace: LitJson
  syntax:
    content: void IDictionary.Remove(object key)
    parameters:
    - id: key
      type: System.Object
    content.vb: Sub System.Collections.IDictionary.Remove(key As Object) Implements IDictionary.Remove
  overload: LitJson.JsonMockWrapper.System#Collections#IDictionary#Remove*
  implements:
  - System.Collections.IDictionary.Remove(System.Object)
  nameWithType.vb: JsonMockWrapper.System.Collections.IDictionary.Remove(Object)
  name.vb: System.Collections.IDictionary.Remove(Object)
- uid: LitJson.JsonMockWrapper.System#Collections#IDictionary#GetEnumerator
  commentId: M:LitJson.JsonMockWrapper.System#Collections#IDictionary#GetEnumerator
  id: System#Collections#IDictionary#GetEnumerator
  isEii: true
  parent: LitJson.JsonMockWrapper
  langs:
  - csharp
  - vb
  name: IDictionary.GetEnumerator()
  nameWithType: JsonMockWrapper.IDictionary.GetEnumerator()
  fullName: LitJson.JsonMockWrapper.System.Collections.IDictionary.GetEnumerator()
  type: Method
  source:
    remote:
      path: Source/JsonMockWrapper.cs
      branch: master
      repo: https://github.com/MacacaGames/UnityLitJson.git
    id: System.Collections.IDictionary.GetEnumerator
    path: ../Source/JsonMockWrapper.cs
    startLine: 79
  assemblies:
  - UnityLitJson
  namespace: LitJson
  syntax:
    content: IDictionaryEnumerator IDictionary.GetEnumerator()
    return:
      type: System.Collections.IDictionaryEnumerator
    content.vb: Function System.Collections.IDictionary.GetEnumerator As IDictionaryEnumerator Implements IDictionary.GetEnumerator
  overload: LitJson.JsonMockWrapper.System#Collections#IDictionary#GetEnumerator*
  implements:
  - System.Collections.IDictionary.GetEnumerator
  nameWithType.vb: JsonMockWrapper.System.Collections.IDictionary.GetEnumerator()
  name.vb: System.Collections.IDictionary.GetEnumerator()
- uid: LitJson.JsonMockWrapper.System#Collections#Specialized#IOrderedDictionary#Item(System.Int32)
  commentId: P:LitJson.JsonMockWrapper.System#Collections#Specialized#IOrderedDictionary#Item(System.Int32)
  id: System#Collections#Specialized#IOrderedDictionary#Item(System.Int32)
  isEii: true
  parent: LitJson.JsonMockWrapper
  langs:
  - csharp
  - vb
  name: IOrderedDictionary.Item[Int32]
  nameWithType: JsonMockWrapper.IOrderedDictionary.Item[Int32]
  fullName: LitJson.JsonMockWrapper.System.Collections.Specialized.IOrderedDictionary.Item[System.Int32]
  type: Property
  source:
    remote:
      path: Source/JsonMockWrapper.cs
      branch: master
      repo: https://github.com/MacacaGames/UnityLitJson.git
    id: System.Collections.Specialized.IOrderedDictionary.this[]
    path: ../Source/JsonMockWrapper.cs
    startLine: 81
  assemblies:
  - UnityLitJson
  namespace: LitJson
  syntax:
    content: object IOrderedDictionary.this[int idx] { get; set; }
    parameters:
    - id: idx
      type: System.Int32
    return:
      type: System.Object
    content.vb: ReadOnly WriteOnly Property System.Collections.Specialized.IOrderedDictionary.Item(idx As Integer) As Object Implements IOrderedDictionary.this[]
  overload: LitJson.JsonMockWrapper.System#Collections#Specialized#IOrderedDictionary#Item*
  implements:
  - System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)
  nameWithType.vb: JsonMockWrapper.System.Collections.Specialized.IOrderedDictionary.Item(Int32)
  modifiers.csharp:
  - get
  - set
  fullName.vb: LitJson.JsonMockWrapper.System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)
  name.vb: System.Collections.Specialized.IOrderedDictionary.Item(Int32)
- uid: LitJson.JsonMockWrapper.System#Collections#Specialized#IOrderedDictionary#GetEnumerator
  commentId: M:LitJson.JsonMockWrapper.System#Collections#Specialized#IOrderedDictionary#GetEnumerator
  id: System#Collections#Specialized#IOrderedDictionary#GetEnumerator
  isEii: true
  parent: LitJson.JsonMockWrapper
  langs:
  - csharp
  - vb
  name: IOrderedDictionary.GetEnumerator()
  nameWithType: JsonMockWrapper.IOrderedDictionary.GetEnumerator()
  fullName: LitJson.JsonMockWrapper.System.Collections.Specialized.IOrderedDictionary.GetEnumerator()
  type: Method
  source:
    remote:
      path: Source/JsonMockWrapper.cs
      branch: master
      repo: https://github.com/MacacaGames/UnityLitJson.git
    id: System.Collections.Specialized.IOrderedDictionary.GetEnumerator
    path: ../Source/JsonMockWrapper.cs
    startLine: 86
  assemblies:
  - UnityLitJson
  namespace: LitJson
  syntax:
    content: IDictionaryEnumerator IOrderedDictionary.GetEnumerator()
    return:
      type: System.Collections.IDictionaryEnumerator
    content.vb: Function System.Collections.Specialized.IOrderedDictionary.GetEnumerator As IDictionaryEnumerator Implements IOrderedDictionary.GetEnumerator
  overload: LitJson.JsonMockWrapper.System#Collections#Specialized#IOrderedDictionary#GetEnumerator*
  implements:
  - System.Collections.Specialized.IOrderedDictionary.GetEnumerator
  nameWithType.vb: JsonMockWrapper.System.Collections.Specialized.IOrderedDictionary.GetEnumerator()
  name.vb: System.Collections.Specialized.IOrderedDictionary.GetEnumerator()
- uid: LitJson.JsonMockWrapper.System#Collections#Specialized#IOrderedDictionary#Insert(System.Int32,System.Object,System.Object)
  commentId: M:LitJson.JsonMockWrapper.System#Collections#Specialized#IOrderedDictionary#Insert(System.Int32,System.Object,System.Object)
  id: System#Collections#Specialized#IOrderedDictionary#Insert(System.Int32,System.Object,System.Object)
  isEii: true
  parent: LitJson.JsonMockWrapper
  langs:
  - csharp
  - vb
  name: IOrderedDictionary.Insert(Int32, Object, Object)
  nameWithType: JsonMockWrapper.IOrderedDictionary.Insert(Int32, Object, Object)
  fullName: LitJson.JsonMockWrapper.System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32, System.Object, System.Object)
  type: Method
  source:
    remote:
      path: Source/JsonMockWrapper.cs
      branch: master
      repo: https://github.com/MacacaGames/UnityLitJson.git
    id: System.Collections.Specialized.IOrderedDictionary.Insert
    path: ../Source/JsonMockWrapper.cs
    startLine: 90
  assemblies:
  - UnityLitJson
  namespace: LitJson
  syntax:
    content: void IOrderedDictionary.Insert(int i, object k, object v)
    parameters:
    - id: i
      type: System.Int32
    - id: k
      type: System.Object
    - id: v
      type: System.Object
    content.vb: Sub System.Collections.Specialized.IOrderedDictionary.Insert(i As Integer, k As Object, v As Object) Implements IOrderedDictionary.Insert
  overload: LitJson.JsonMockWrapper.System#Collections#Specialized#IOrderedDictionary#Insert*
  implements:
  - System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)
  nameWithType.vb: JsonMockWrapper.System.Collections.Specialized.IOrderedDictionary.Insert(Int32, Object, Object)
  name.vb: System.Collections.Specialized.IOrderedDictionary.Insert(Int32, Object, Object)
- uid: LitJson.JsonMockWrapper.System#Collections#Specialized#IOrderedDictionary#RemoveAt(System.Int32)
  commentId: M:LitJson.JsonMockWrapper.System#Collections#Specialized#IOrderedDictionary#RemoveAt(System.Int32)
  id: System#Collections#Specialized#IOrderedDictionary#RemoveAt(System.Int32)
  isEii: true
  parent: LitJson.JsonMockWrapper
  langs:
  - csharp
  - vb
  name: IOrderedDictionary.RemoveAt(Int32)
  nameWithType: JsonMockWrapper.IOrderedDictionary.RemoveAt(Int32)
  fullName: LitJson.JsonMockWrapper.System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)
  type: Method
  source:
    remote:
      path: Source/JsonMockWrapper.cs
      branch: master
      repo: https://github.com/MacacaGames/UnityLitJson.git
    id: System.Collections.Specialized.IOrderedDictionary.RemoveAt
    path: ../Source/JsonMockWrapper.cs
    startLine: 91
  assemblies:
  - UnityLitJson
  namespace: LitJson
  syntax:
    content: void IOrderedDictionary.RemoveAt(int i)
    parameters:
    - id: i
      type: System.Int32
    content.vb: Sub System.Collections.Specialized.IOrderedDictionary.RemoveAt(i As Integer) Implements IOrderedDictionary.RemoveAt
  overload: LitJson.JsonMockWrapper.System#Collections#Specialized#IOrderedDictionary#RemoveAt*
  implements:
  - System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)
  nameWithType.vb: JsonMockWrapper.System.Collections.Specialized.IOrderedDictionary.RemoveAt(Int32)
  name.vb: System.Collections.Specialized.IOrderedDictionary.RemoveAt(Int32)
references:
- uid: LitJson
  commentId: N:LitJson
  name: LitJson
  nameWithType: LitJson
  fullName: LitJson
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: LitJson.IJsonWrapper
  commentId: T:LitJson.IJsonWrapper
  parent: LitJson
  name: IJsonWrapper
  nameWithType: IJsonWrapper
  fullName: LitJson.IJsonWrapper
- uid: System.Collections.IList
  commentId: T:System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Collections.Specialized.IOrderedDictionary
  commentId: T:System.Collections.Specialized.IOrderedDictionary
  parent: System.Collections.Specialized
  isExternal: true
  name: IOrderedDictionary
  nameWithType: IOrderedDictionary
  fullName: System.Collections.Specialized.IOrderedDictionary
- uid: System.Collections.IDictionary
  commentId: T:System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Collections.ICollection
  commentId: T:System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System.Collections.Specialized
  commentId: N:System.Collections.Specialized
  isExternal: true
  name: System.Collections.Specialized
  nameWithType: System.Collections.Specialized
  fullName: System.Collections.Specialized
- uid: LitJson.JsonMockWrapper.IsArray*
  commentId: Overload:LitJson.JsonMockWrapper.IsArray
  name: IsArray
  nameWithType: JsonMockWrapper.IsArray
  fullName: LitJson.JsonMockWrapper.IsArray
- uid: LitJson.IJsonWrapper.IsArray
  commentId: P:LitJson.IJsonWrapper.IsArray
  parent: LitJson.IJsonWrapper
  name: IsArray
  nameWithType: IJsonWrapper.IsArray
  fullName: LitJson.IJsonWrapper.IsArray
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: LitJson.JsonMockWrapper.IsBoolean*
  commentId: Overload:LitJson.JsonMockWrapper.IsBoolean
  name: IsBoolean
  nameWithType: JsonMockWrapper.IsBoolean
  fullName: LitJson.JsonMockWrapper.IsBoolean
- uid: LitJson.IJsonWrapper.IsBoolean
  commentId: P:LitJson.IJsonWrapper.IsBoolean
  parent: LitJson.IJsonWrapper
  name: IsBoolean
  nameWithType: IJsonWrapper.IsBoolean
  fullName: LitJson.IJsonWrapper.IsBoolean
- uid: LitJson.JsonMockWrapper.IsReal*
  commentId: Overload:LitJson.JsonMockWrapper.IsReal
  name: IsReal
  nameWithType: JsonMockWrapper.IsReal
  fullName: LitJson.JsonMockWrapper.IsReal
- uid: LitJson.IJsonWrapper.IsReal
  commentId: P:LitJson.IJsonWrapper.IsReal
  parent: LitJson.IJsonWrapper
  name: IsReal
  nameWithType: IJsonWrapper.IsReal
  fullName: LitJson.IJsonWrapper.IsReal
- uid: LitJson.JsonMockWrapper.IsNatural*
  commentId: Overload:LitJson.JsonMockWrapper.IsNatural
  name: IsNatural
  nameWithType: JsonMockWrapper.IsNatural
  fullName: LitJson.JsonMockWrapper.IsNatural
- uid: LitJson.IJsonWrapper.IsNatural
  commentId: P:LitJson.IJsonWrapper.IsNatural
  parent: LitJson.IJsonWrapper
  name: IsNatural
  nameWithType: IJsonWrapper.IsNatural
  fullName: LitJson.IJsonWrapper.IsNatural
- uid: LitJson.JsonMockWrapper.IsObject*
  commentId: Overload:LitJson.JsonMockWrapper.IsObject
  name: IsObject
  nameWithType: JsonMockWrapper.IsObject
  fullName: LitJson.JsonMockWrapper.IsObject
- uid: LitJson.IJsonWrapper.IsObject
  commentId: P:LitJson.IJsonWrapper.IsObject
  parent: LitJson.IJsonWrapper
  name: IsObject
  nameWithType: IJsonWrapper.IsObject
  fullName: LitJson.IJsonWrapper.IsObject
- uid: LitJson.JsonMockWrapper.IsString*
  commentId: Overload:LitJson.JsonMockWrapper.IsString
  name: IsString
  nameWithType: JsonMockWrapper.IsString
  fullName: LitJson.JsonMockWrapper.IsString
- uid: LitJson.IJsonWrapper.IsString
  commentId: P:LitJson.IJsonWrapper.IsString
  parent: LitJson.IJsonWrapper
  name: IsString
  nameWithType: IJsonWrapper.IsString
  fullName: LitJson.IJsonWrapper.IsString
- uid: LitJson.JsonMockWrapper.GetBoolean*
  commentId: Overload:LitJson.JsonMockWrapper.GetBoolean
  name: GetBoolean
  nameWithType: JsonMockWrapper.GetBoolean
  fullName: LitJson.JsonMockWrapper.GetBoolean
- uid: LitJson.IJsonWrapper.GetBoolean
  commentId: M:LitJson.IJsonWrapper.GetBoolean
  parent: LitJson.IJsonWrapper
  name: GetBoolean()
  nameWithType: IJsonWrapper.GetBoolean()
  fullName: LitJson.IJsonWrapper.GetBoolean()
  spec.csharp:
  - uid: LitJson.IJsonWrapper.GetBoolean
    name: GetBoolean
    nameWithType: IJsonWrapper.GetBoolean
    fullName: LitJson.IJsonWrapper.GetBoolean
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: LitJson.IJsonWrapper.GetBoolean
    name: GetBoolean
    nameWithType: IJsonWrapper.GetBoolean
    fullName: LitJson.IJsonWrapper.GetBoolean
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: LitJson.JsonMockWrapper.GetReal*
  commentId: Overload:LitJson.JsonMockWrapper.GetReal
  name: GetReal
  nameWithType: JsonMockWrapper.GetReal
  fullName: LitJson.JsonMockWrapper.GetReal
- uid: LitJson.IJsonWrapper.GetReal
  commentId: M:LitJson.IJsonWrapper.GetReal
  parent: LitJson.IJsonWrapper
  name: GetReal()
  nameWithType: IJsonWrapper.GetReal()
  fullName: LitJson.IJsonWrapper.GetReal()
  spec.csharp:
  - uid: LitJson.IJsonWrapper.GetReal
    name: GetReal
    nameWithType: IJsonWrapper.GetReal
    fullName: LitJson.IJsonWrapper.GetReal
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: LitJson.IJsonWrapper.GetReal
    name: GetReal
    nameWithType: IJsonWrapper.GetReal
    fullName: LitJson.IJsonWrapper.GetReal
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: LitJson.JsonMockWrapper.GetNatural*
  commentId: Overload:LitJson.JsonMockWrapper.GetNatural
  name: GetNatural
  nameWithType: JsonMockWrapper.GetNatural
  fullName: LitJson.JsonMockWrapper.GetNatural
- uid: LitJson.IJsonWrapper.GetNatural
  commentId: M:LitJson.IJsonWrapper.GetNatural
  parent: LitJson.IJsonWrapper
  name: GetNatural()
  nameWithType: IJsonWrapper.GetNatural()
  fullName: LitJson.IJsonWrapper.GetNatural()
  spec.csharp:
  - uid: LitJson.IJsonWrapper.GetNatural
    name: GetNatural
    nameWithType: IJsonWrapper.GetNatural
    fullName: LitJson.IJsonWrapper.GetNatural
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: LitJson.IJsonWrapper.GetNatural
    name: GetNatural
    nameWithType: IJsonWrapper.GetNatural
    fullName: LitJson.IJsonWrapper.GetNatural
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: LitJson.JsonMockWrapper.GetJsonType*
  commentId: Overload:LitJson.JsonMockWrapper.GetJsonType
  name: GetJsonType
  nameWithType: JsonMockWrapper.GetJsonType
  fullName: LitJson.JsonMockWrapper.GetJsonType
- uid: LitJson.IJsonWrapper.GetJsonType
  commentId: M:LitJson.IJsonWrapper.GetJsonType
  parent: LitJson.IJsonWrapper
  name: GetJsonType()
  nameWithType: IJsonWrapper.GetJsonType()
  fullName: LitJson.IJsonWrapper.GetJsonType()
  spec.csharp:
  - uid: LitJson.IJsonWrapper.GetJsonType
    name: GetJsonType
    nameWithType: IJsonWrapper.GetJsonType
    fullName: LitJson.IJsonWrapper.GetJsonType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: LitJson.IJsonWrapper.GetJsonType
    name: GetJsonType
    nameWithType: IJsonWrapper.GetJsonType
    fullName: LitJson.IJsonWrapper.GetJsonType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: LitJson.JsonType
  commentId: T:LitJson.JsonType
  parent: LitJson
  name: JsonType
  nameWithType: JsonType
  fullName: LitJson.JsonType
- uid: LitJson.JsonMockWrapper.GetString*
  commentId: Overload:LitJson.JsonMockWrapper.GetString
  name: GetString
  nameWithType: JsonMockWrapper.GetString
  fullName: LitJson.JsonMockWrapper.GetString
- uid: LitJson.IJsonWrapper.GetString
  commentId: M:LitJson.IJsonWrapper.GetString
  parent: LitJson.IJsonWrapper
  name: GetString()
  nameWithType: IJsonWrapper.GetString()
  fullName: LitJson.IJsonWrapper.GetString()
  spec.csharp:
  - uid: LitJson.IJsonWrapper.GetString
    name: GetString
    nameWithType: IJsonWrapper.GetString
    fullName: LitJson.IJsonWrapper.GetString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: LitJson.IJsonWrapper.GetString
    name: GetString
    nameWithType: IJsonWrapper.GetString
    fullName: LitJson.IJsonWrapper.GetString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: LitJson.JsonMockWrapper.SetBoolean*
  commentId: Overload:LitJson.JsonMockWrapper.SetBoolean
  name: SetBoolean
  nameWithType: JsonMockWrapper.SetBoolean
  fullName: LitJson.JsonMockWrapper.SetBoolean
- uid: LitJson.IJsonWrapper.SetBoolean(System.Boolean)
  commentId: M:LitJson.IJsonWrapper.SetBoolean(System.Boolean)
  parent: LitJson.IJsonWrapper
  isExternal: true
  name: SetBoolean(Boolean)
  nameWithType: IJsonWrapper.SetBoolean(Boolean)
  fullName: LitJson.IJsonWrapper.SetBoolean(System.Boolean)
  spec.csharp:
  - uid: LitJson.IJsonWrapper.SetBoolean(System.Boolean)
    name: SetBoolean
    nameWithType: IJsonWrapper.SetBoolean
    fullName: LitJson.IJsonWrapper.SetBoolean
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: LitJson.IJsonWrapper.SetBoolean(System.Boolean)
    name: SetBoolean
    nameWithType: IJsonWrapper.SetBoolean
    fullName: LitJson.IJsonWrapper.SetBoolean
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: LitJson.JsonMockWrapper.SetReal*
  commentId: Overload:LitJson.JsonMockWrapper.SetReal
  name: SetReal
  nameWithType: JsonMockWrapper.SetReal
  fullName: LitJson.JsonMockWrapper.SetReal
- uid: LitJson.IJsonWrapper.SetReal(System.Double)
  commentId: M:LitJson.IJsonWrapper.SetReal(System.Double)
  parent: LitJson.IJsonWrapper
  isExternal: true
  name: SetReal(Double)
  nameWithType: IJsonWrapper.SetReal(Double)
  fullName: LitJson.IJsonWrapper.SetReal(System.Double)
  spec.csharp:
  - uid: LitJson.IJsonWrapper.SetReal(System.Double)
    name: SetReal
    nameWithType: IJsonWrapper.SetReal
    fullName: LitJson.IJsonWrapper.SetReal
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: LitJson.IJsonWrapper.SetReal(System.Double)
    name: SetReal
    nameWithType: IJsonWrapper.SetReal
    fullName: LitJson.IJsonWrapper.SetReal
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: LitJson.JsonMockWrapper.SetNatural*
  commentId: Overload:LitJson.JsonMockWrapper.SetNatural
  name: SetNatural
  nameWithType: JsonMockWrapper.SetNatural
  fullName: LitJson.JsonMockWrapper.SetNatural
- uid: LitJson.IJsonWrapper.SetNatural(System.Int64)
  commentId: M:LitJson.IJsonWrapper.SetNatural(System.Int64)
  parent: LitJson.IJsonWrapper
  isExternal: true
  name: SetNatural(Int64)
  nameWithType: IJsonWrapper.SetNatural(Int64)
  fullName: LitJson.IJsonWrapper.SetNatural(System.Int64)
  spec.csharp:
  - uid: LitJson.IJsonWrapper.SetNatural(System.Int64)
    name: SetNatural
    nameWithType: IJsonWrapper.SetNatural
    fullName: LitJson.IJsonWrapper.SetNatural
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: LitJson.IJsonWrapper.SetNatural(System.Int64)
    name: SetNatural
    nameWithType: IJsonWrapper.SetNatural
    fullName: LitJson.IJsonWrapper.SetNatural
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: LitJson.JsonMockWrapper.SetJsonType*
  commentId: Overload:LitJson.JsonMockWrapper.SetJsonType
  name: SetJsonType
  nameWithType: JsonMockWrapper.SetJsonType
  fullName: LitJson.JsonMockWrapper.SetJsonType
- uid: LitJson.IJsonWrapper.SetJsonType(LitJson.JsonType)
  commentId: M:LitJson.IJsonWrapper.SetJsonType(LitJson.JsonType)
  parent: LitJson.IJsonWrapper
  name: SetJsonType(JsonType)
  nameWithType: IJsonWrapper.SetJsonType(JsonType)
  fullName: LitJson.IJsonWrapper.SetJsonType(LitJson.JsonType)
  spec.csharp:
  - uid: LitJson.IJsonWrapper.SetJsonType(LitJson.JsonType)
    name: SetJsonType
    nameWithType: IJsonWrapper.SetJsonType
    fullName: LitJson.IJsonWrapper.SetJsonType
  - name: (
    nameWithType: (
    fullName: (
  - uid: LitJson.JsonType
    name: JsonType
    nameWithType: JsonType
    fullName: LitJson.JsonType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: LitJson.IJsonWrapper.SetJsonType(LitJson.JsonType)
    name: SetJsonType
    nameWithType: IJsonWrapper.SetJsonType
    fullName: LitJson.IJsonWrapper.SetJsonType
  - name: (
    nameWithType: (
    fullName: (
  - uid: LitJson.JsonType
    name: JsonType
    nameWithType: JsonType
    fullName: LitJson.JsonType
  - name: )
    nameWithType: )
    fullName: )
- uid: LitJson.JsonMockWrapper.SetString*
  commentId: Overload:LitJson.JsonMockWrapper.SetString
  name: SetString
  nameWithType: JsonMockWrapper.SetString
  fullName: LitJson.JsonMockWrapper.SetString
- uid: LitJson.IJsonWrapper.SetString(System.String)
  commentId: M:LitJson.IJsonWrapper.SetString(System.String)
  parent: LitJson.IJsonWrapper
  isExternal: true
  name: SetString(String)
  nameWithType: IJsonWrapper.SetString(String)
  fullName: LitJson.IJsonWrapper.SetString(System.String)
  spec.csharp:
  - uid: LitJson.IJsonWrapper.SetString(System.String)
    name: SetString
    nameWithType: IJsonWrapper.SetString
    fullName: LitJson.IJsonWrapper.SetString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: LitJson.IJsonWrapper.SetString(System.String)
    name: SetString
    nameWithType: IJsonWrapper.SetString
    fullName: LitJson.IJsonWrapper.SetString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: LitJson.JsonMockWrapper.ToJson*
  commentId: Overload:LitJson.JsonMockWrapper.ToJson
  name: ToJson
  nameWithType: JsonMockWrapper.ToJson
  fullName: LitJson.JsonMockWrapper.ToJson
- uid: LitJson.IJsonWrapper.ToJson
  commentId: M:LitJson.IJsonWrapper.ToJson
  parent: LitJson.IJsonWrapper
  name: ToJson()
  nameWithType: IJsonWrapper.ToJson()
  fullName: LitJson.IJsonWrapper.ToJson()
  spec.csharp:
  - uid: LitJson.IJsonWrapper.ToJson
    name: ToJson
    nameWithType: IJsonWrapper.ToJson
    fullName: LitJson.IJsonWrapper.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: LitJson.IJsonWrapper.ToJson
    name: ToJson
    nameWithType: IJsonWrapper.ToJson
    fullName: LitJson.IJsonWrapper.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: LitJson.IJsonWrapper.ToJson(LitJson.JsonWriter)
  commentId: M:LitJson.IJsonWrapper.ToJson(LitJson.JsonWriter)
  parent: LitJson.IJsonWrapper
  name: ToJson(JsonWriter)
  nameWithType: IJsonWrapper.ToJson(JsonWriter)
  fullName: LitJson.IJsonWrapper.ToJson(LitJson.JsonWriter)
  spec.csharp:
  - uid: LitJson.IJsonWrapper.ToJson(LitJson.JsonWriter)
    name: ToJson
    nameWithType: IJsonWrapper.ToJson
    fullName: LitJson.IJsonWrapper.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: LitJson.JsonWriter
    name: JsonWriter
    nameWithType: JsonWriter
    fullName: LitJson.JsonWriter
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: LitJson.IJsonWrapper.ToJson(LitJson.JsonWriter)
    name: ToJson
    nameWithType: IJsonWrapper.ToJson
    fullName: LitJson.IJsonWrapper.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: LitJson.JsonWriter
    name: JsonWriter
    nameWithType: JsonWriter
    fullName: LitJson.JsonWriter
  - name: )
    nameWithType: )
    fullName: )
- uid: LitJson.JsonWriter
  commentId: T:LitJson.JsonWriter
  parent: LitJson
  name: JsonWriter
  nameWithType: JsonWriter
  fullName: LitJson.JsonWriter
- uid: LitJson.JsonMockWrapper.System#Collections#IList#IsFixedSize*
  commentId: Overload:LitJson.JsonMockWrapper.System#Collections#IList#IsFixedSize
  name: IList.IsFixedSize
  nameWithType: JsonMockWrapper.IList.IsFixedSize
  fullName: LitJson.JsonMockWrapper.System.Collections.IList.IsFixedSize
  nameWithType.vb: JsonMockWrapper.System.Collections.IList.IsFixedSize
  name.vb: System.Collections.IList.IsFixedSize
- uid: System.Collections.IList.IsFixedSize
  commentId: P:System.Collections.IList.IsFixedSize
  parent: System.Collections.IList
  isExternal: true
  name: IsFixedSize
  nameWithType: IList.IsFixedSize
  fullName: System.Collections.IList.IsFixedSize
- uid: LitJson.JsonMockWrapper.System#Collections#IList#IsReadOnly*
  commentId: Overload:LitJson.JsonMockWrapper.System#Collections#IList#IsReadOnly
  name: IList.IsReadOnly
  nameWithType: JsonMockWrapper.IList.IsReadOnly
  fullName: LitJson.JsonMockWrapper.System.Collections.IList.IsReadOnly
  nameWithType.vb: JsonMockWrapper.System.Collections.IList.IsReadOnly
  name.vb: System.Collections.IList.IsReadOnly
- uid: System.Collections.IList.IsReadOnly
  commentId: P:System.Collections.IList.IsReadOnly
  parent: System.Collections.IList
  isExternal: true
  name: IsReadOnly
  nameWithType: IList.IsReadOnly
  fullName: System.Collections.IList.IsReadOnly
- uid: LitJson.JsonMockWrapper.System#Collections#IList#Item*
  commentId: Overload:LitJson.JsonMockWrapper.System#Collections#IList#Item
  name: IList.Item
  nameWithType: JsonMockWrapper.IList.Item
  fullName: LitJson.JsonMockWrapper.System.Collections.IList.Item
  nameWithType.vb: JsonMockWrapper.System.Collections.IList.Item
  name.vb: System.Collections.IList.Item
- uid: System.Collections.IList.Item(System.Int32)
  commentId: P:System.Collections.IList.Item(System.Int32)
  parent: System.Collections.IList
  isExternal: true
  name: Item[Int32]
  nameWithType: IList.Item[Int32]
  fullName: System.Collections.IList.Item[System.Int32]
  nameWithType.vb: IList.Item(Int32)
  fullName.vb: System.Collections.IList.Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.IList.Item(System.Int32)
    name: Item
    nameWithType: IList.Item
    fullName: System.Collections.IList.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.IList.Item(System.Int32)
    name: Item
    nameWithType: IList.Item
    fullName: System.Collections.IList.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: LitJson.JsonMockWrapper.System#Collections#IList#Add*
  commentId: Overload:LitJson.JsonMockWrapper.System#Collections#IList#Add
  name: IList.Add
  nameWithType: JsonMockWrapper.IList.Add
  fullName: LitJson.JsonMockWrapper.System.Collections.IList.Add
  nameWithType.vb: JsonMockWrapper.System.Collections.IList.Add
  name.vb: System.Collections.IList.Add
- uid: System.Collections.IList.Add(System.Object)
  commentId: M:System.Collections.IList.Add(System.Object)
  parent: System.Collections.IList
  isExternal: true
  name: Add(Object)
  nameWithType: IList.Add(Object)
  fullName: System.Collections.IList.Add(System.Object)
  spec.csharp:
  - uid: System.Collections.IList.Add(System.Object)
    name: Add
    nameWithType: IList.Add
    fullName: System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IList.Add(System.Object)
    name: Add
    nameWithType: IList.Add
    fullName: System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: LitJson.JsonMockWrapper.System#Collections#IList#Clear*
  commentId: Overload:LitJson.JsonMockWrapper.System#Collections#IList#Clear
  name: IList.Clear
  nameWithType: JsonMockWrapper.IList.Clear
  fullName: LitJson.JsonMockWrapper.System.Collections.IList.Clear
  nameWithType.vb: JsonMockWrapper.System.Collections.IList.Clear
  name.vb: System.Collections.IList.Clear
- uid: System.Collections.IList.Clear
  commentId: M:System.Collections.IList.Clear
  parent: System.Collections.IList
  isExternal: true
  name: Clear()
  nameWithType: IList.Clear()
  fullName: System.Collections.IList.Clear()
  spec.csharp:
  - uid: System.Collections.IList.Clear
    name: Clear
    nameWithType: IList.Clear
    fullName: System.Collections.IList.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IList.Clear
    name: Clear
    nameWithType: IList.Clear
    fullName: System.Collections.IList.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: LitJson.JsonMockWrapper.System#Collections#IList#Contains*
  commentId: Overload:LitJson.JsonMockWrapper.System#Collections#IList#Contains
  name: IList.Contains
  nameWithType: JsonMockWrapper.IList.Contains
  fullName: LitJson.JsonMockWrapper.System.Collections.IList.Contains
  nameWithType.vb: JsonMockWrapper.System.Collections.IList.Contains
  name.vb: System.Collections.IList.Contains
- uid: System.Collections.IList.Contains(System.Object)
  commentId: M:System.Collections.IList.Contains(System.Object)
  parent: System.Collections.IList
  isExternal: true
  name: Contains(Object)
  nameWithType: IList.Contains(Object)
  fullName: System.Collections.IList.Contains(System.Object)
  spec.csharp:
  - uid: System.Collections.IList.Contains(System.Object)
    name: Contains
    nameWithType: IList.Contains
    fullName: System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IList.Contains(System.Object)
    name: Contains
    nameWithType: IList.Contains
    fullName: System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: LitJson.JsonMockWrapper.System#Collections#IList#IndexOf*
  commentId: Overload:LitJson.JsonMockWrapper.System#Collections#IList#IndexOf
  name: IList.IndexOf
  nameWithType: JsonMockWrapper.IList.IndexOf
  fullName: LitJson.JsonMockWrapper.System.Collections.IList.IndexOf
  nameWithType.vb: JsonMockWrapper.System.Collections.IList.IndexOf
  name.vb: System.Collections.IList.IndexOf
- uid: System.Collections.IList.IndexOf(System.Object)
  commentId: M:System.Collections.IList.IndexOf(System.Object)
  parent: System.Collections.IList
  isExternal: true
  name: IndexOf(Object)
  nameWithType: IList.IndexOf(Object)
  fullName: System.Collections.IList.IndexOf(System.Object)
  spec.csharp:
  - uid: System.Collections.IList.IndexOf(System.Object)
    name: IndexOf
    nameWithType: IList.IndexOf
    fullName: System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IList.IndexOf(System.Object)
    name: IndexOf
    nameWithType: IList.IndexOf
    fullName: System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: LitJson.JsonMockWrapper.System#Collections#IList#Insert*
  commentId: Overload:LitJson.JsonMockWrapper.System#Collections#IList#Insert
  name: IList.Insert
  nameWithType: JsonMockWrapper.IList.Insert
  fullName: LitJson.JsonMockWrapper.System.Collections.IList.Insert
  nameWithType.vb: JsonMockWrapper.System.Collections.IList.Insert
  name.vb: System.Collections.IList.Insert
- uid: System.Collections.IList.Insert(System.Int32,System.Object)
  commentId: M:System.Collections.IList.Insert(System.Int32,System.Object)
  parent: System.Collections.IList
  isExternal: true
  name: Insert(Int32, Object)
  nameWithType: IList.Insert(Int32, Object)
  fullName: System.Collections.IList.Insert(System.Int32, System.Object)
  spec.csharp:
  - uid: System.Collections.IList.Insert(System.Int32,System.Object)
    name: Insert
    nameWithType: IList.Insert
    fullName: System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IList.Insert(System.Int32,System.Object)
    name: Insert
    nameWithType: IList.Insert
    fullName: System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: LitJson.JsonMockWrapper.System#Collections#IList#Remove*
  commentId: Overload:LitJson.JsonMockWrapper.System#Collections#IList#Remove
  name: IList.Remove
  nameWithType: JsonMockWrapper.IList.Remove
  fullName: LitJson.JsonMockWrapper.System.Collections.IList.Remove
  nameWithType.vb: JsonMockWrapper.System.Collections.IList.Remove
  name.vb: System.Collections.IList.Remove
- uid: System.Collections.IList.Remove(System.Object)
  commentId: M:System.Collections.IList.Remove(System.Object)
  parent: System.Collections.IList
  isExternal: true
  name: Remove(Object)
  nameWithType: IList.Remove(Object)
  fullName: System.Collections.IList.Remove(System.Object)
  spec.csharp:
  - uid: System.Collections.IList.Remove(System.Object)
    name: Remove
    nameWithType: IList.Remove
    fullName: System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IList.Remove(System.Object)
    name: Remove
    nameWithType: IList.Remove
    fullName: System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: LitJson.JsonMockWrapper.System#Collections#IList#RemoveAt*
  commentId: Overload:LitJson.JsonMockWrapper.System#Collections#IList#RemoveAt
  name: IList.RemoveAt
  nameWithType: JsonMockWrapper.IList.RemoveAt
  fullName: LitJson.JsonMockWrapper.System.Collections.IList.RemoveAt
  nameWithType.vb: JsonMockWrapper.System.Collections.IList.RemoveAt
  name.vb: System.Collections.IList.RemoveAt
- uid: System.Collections.IList.RemoveAt(System.Int32)
  commentId: M:System.Collections.IList.RemoveAt(System.Int32)
  parent: System.Collections.IList
  isExternal: true
  name: RemoveAt(Int32)
  nameWithType: IList.RemoveAt(Int32)
  fullName: System.Collections.IList.RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.IList.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: IList.RemoveAt
    fullName: System.Collections.IList.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IList.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: IList.RemoveAt
    fullName: System.Collections.IList.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: LitJson.JsonMockWrapper.System#Collections#ICollection#Count*
  commentId: Overload:LitJson.JsonMockWrapper.System#Collections#ICollection#Count
  name: ICollection.Count
  nameWithType: JsonMockWrapper.ICollection.Count
  fullName: LitJson.JsonMockWrapper.System.Collections.ICollection.Count
  nameWithType.vb: JsonMockWrapper.System.Collections.ICollection.Count
  name.vb: System.Collections.ICollection.Count
- uid: System.Collections.ICollection.Count
  commentId: P:System.Collections.ICollection.Count
  parent: System.Collections.ICollection
  isExternal: true
  name: Count
  nameWithType: ICollection.Count
  fullName: System.Collections.ICollection.Count
- uid: LitJson.JsonMockWrapper.System#Collections#ICollection#IsSynchronized*
  commentId: Overload:LitJson.JsonMockWrapper.System#Collections#ICollection#IsSynchronized
  name: ICollection.IsSynchronized
  nameWithType: JsonMockWrapper.ICollection.IsSynchronized
  fullName: LitJson.JsonMockWrapper.System.Collections.ICollection.IsSynchronized
  nameWithType.vb: JsonMockWrapper.System.Collections.ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
- uid: System.Collections.ICollection.IsSynchronized
  commentId: P:System.Collections.ICollection.IsSynchronized
  parent: System.Collections.ICollection
  isExternal: true
  name: IsSynchronized
  nameWithType: ICollection.IsSynchronized
  fullName: System.Collections.ICollection.IsSynchronized
- uid: LitJson.JsonMockWrapper.System#Collections#ICollection#SyncRoot*
  commentId: Overload:LitJson.JsonMockWrapper.System#Collections#ICollection#SyncRoot
  name: ICollection.SyncRoot
  nameWithType: JsonMockWrapper.ICollection.SyncRoot
  fullName: LitJson.JsonMockWrapper.System.Collections.ICollection.SyncRoot
  nameWithType.vb: JsonMockWrapper.System.Collections.ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
- uid: System.Collections.ICollection.SyncRoot
  commentId: P:System.Collections.ICollection.SyncRoot
  parent: System.Collections.ICollection
  isExternal: true
  name: SyncRoot
  nameWithType: ICollection.SyncRoot
  fullName: System.Collections.ICollection.SyncRoot
- uid: LitJson.JsonMockWrapper.System#Collections#ICollection#CopyTo*
  commentId: Overload:LitJson.JsonMockWrapper.System#Collections#ICollection#CopyTo
  name: ICollection.CopyTo
  nameWithType: JsonMockWrapper.ICollection.CopyTo
  fullName: LitJson.JsonMockWrapper.System.Collections.ICollection.CopyTo
  nameWithType.vb: JsonMockWrapper.System.Collections.ICollection.CopyTo
  name.vb: System.Collections.ICollection.CopyTo
- uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)
  commentId: M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)
  parent: System.Collections.ICollection
  isExternal: true
  name: CopyTo(Array, Int32)
  nameWithType: ICollection.CopyTo(Array, Int32)
  fullName: System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  spec.csharp:
  - uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)
    name: CopyTo
    nameWithType: ICollection.CopyTo
    fullName: System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)
    name: CopyTo
    nameWithType: ICollection.CopyTo
    fullName: System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Array
  commentId: T:System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: LitJson.JsonMockWrapper.System#Collections#IEnumerable#GetEnumerator*
  commentId: Overload:LitJson.JsonMockWrapper.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator
  nameWithType: JsonMockWrapper.IEnumerable.GetEnumerator
  fullName: LitJson.JsonMockWrapper.System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: JsonMockWrapper.System.Collections.IEnumerable.GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: LitJson.JsonMockWrapper.System#Collections#IDictionary#IsFixedSize*
  commentId: Overload:LitJson.JsonMockWrapper.System#Collections#IDictionary#IsFixedSize
  name: IDictionary.IsFixedSize
  nameWithType: JsonMockWrapper.IDictionary.IsFixedSize
  fullName: LitJson.JsonMockWrapper.System.Collections.IDictionary.IsFixedSize
  nameWithType.vb: JsonMockWrapper.System.Collections.IDictionary.IsFixedSize
  name.vb: System.Collections.IDictionary.IsFixedSize
- uid: System.Collections.IDictionary.IsFixedSize
  commentId: P:System.Collections.IDictionary.IsFixedSize
  parent: System.Collections.IDictionary
  isExternal: true
  name: IsFixedSize
  nameWithType: IDictionary.IsFixedSize
  fullName: System.Collections.IDictionary.IsFixedSize
- uid: LitJson.JsonMockWrapper.System#Collections#IDictionary#IsReadOnly*
  commentId: Overload:LitJson.JsonMockWrapper.System#Collections#IDictionary#IsReadOnly
  name: IDictionary.IsReadOnly
  nameWithType: JsonMockWrapper.IDictionary.IsReadOnly
  fullName: LitJson.JsonMockWrapper.System.Collections.IDictionary.IsReadOnly
  nameWithType.vb: JsonMockWrapper.System.Collections.IDictionary.IsReadOnly
  name.vb: System.Collections.IDictionary.IsReadOnly
- uid: System.Collections.IDictionary.IsReadOnly
  commentId: P:System.Collections.IDictionary.IsReadOnly
  parent: System.Collections.IDictionary
  isExternal: true
  name: IsReadOnly
  nameWithType: IDictionary.IsReadOnly
  fullName: System.Collections.IDictionary.IsReadOnly
- uid: LitJson.JsonMockWrapper.System#Collections#IDictionary#Keys*
  commentId: Overload:LitJson.JsonMockWrapper.System#Collections#IDictionary#Keys
  name: IDictionary.Keys
  nameWithType: JsonMockWrapper.IDictionary.Keys
  fullName: LitJson.JsonMockWrapper.System.Collections.IDictionary.Keys
  nameWithType.vb: JsonMockWrapper.System.Collections.IDictionary.Keys
  name.vb: System.Collections.IDictionary.Keys
- uid: System.Collections.IDictionary.Keys
  commentId: P:System.Collections.IDictionary.Keys
  parent: System.Collections.IDictionary
  isExternal: true
  name: Keys
  nameWithType: IDictionary.Keys
  fullName: System.Collections.IDictionary.Keys
- uid: LitJson.JsonMockWrapper.System#Collections#IDictionary#Values*
  commentId: Overload:LitJson.JsonMockWrapper.System#Collections#IDictionary#Values
  name: IDictionary.Values
  nameWithType: JsonMockWrapper.IDictionary.Values
  fullName: LitJson.JsonMockWrapper.System.Collections.IDictionary.Values
  nameWithType.vb: JsonMockWrapper.System.Collections.IDictionary.Values
  name.vb: System.Collections.IDictionary.Values
- uid: System.Collections.IDictionary.Values
  commentId: P:System.Collections.IDictionary.Values
  parent: System.Collections.IDictionary
  isExternal: true
  name: Values
  nameWithType: IDictionary.Values
  fullName: System.Collections.IDictionary.Values
- uid: LitJson.JsonMockWrapper.System#Collections#IDictionary#Item*
  commentId: Overload:LitJson.JsonMockWrapper.System#Collections#IDictionary#Item
  name: IDictionary.Item
  nameWithType: JsonMockWrapper.IDictionary.Item
  fullName: LitJson.JsonMockWrapper.System.Collections.IDictionary.Item
  nameWithType.vb: JsonMockWrapper.System.Collections.IDictionary.Item
  name.vb: System.Collections.IDictionary.Item
- uid: System.Collections.IDictionary.Item(System.Object)
  commentId: P:System.Collections.IDictionary.Item(System.Object)
  parent: System.Collections.IDictionary
  isExternal: true
  name: Item[Object]
  nameWithType: IDictionary.Item[Object]
  fullName: System.Collections.IDictionary.Item[System.Object]
  nameWithType.vb: IDictionary.Item(Object)
  fullName.vb: System.Collections.IDictionary.Item(System.Object)
  name.vb: Item(Object)
  spec.csharp:
  - uid: System.Collections.IDictionary.Item(System.Object)
    name: Item
    nameWithType: IDictionary.Item
    fullName: System.Collections.IDictionary.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.IDictionary.Item(System.Object)
    name: Item
    nameWithType: IDictionary.Item
    fullName: System.Collections.IDictionary.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: LitJson.JsonMockWrapper.System#Collections#IDictionary#Add*
  commentId: Overload:LitJson.JsonMockWrapper.System#Collections#IDictionary#Add
  name: IDictionary.Add
  nameWithType: JsonMockWrapper.IDictionary.Add
  fullName: LitJson.JsonMockWrapper.System.Collections.IDictionary.Add
  nameWithType.vb: JsonMockWrapper.System.Collections.IDictionary.Add
  name.vb: System.Collections.IDictionary.Add
- uid: System.Collections.IDictionary.Add(System.Object,System.Object)
  commentId: M:System.Collections.IDictionary.Add(System.Object,System.Object)
  parent: System.Collections.IDictionary
  isExternal: true
  name: Add(Object, Object)
  nameWithType: IDictionary.Add(Object, Object)
  fullName: System.Collections.IDictionary.Add(System.Object, System.Object)
  spec.csharp:
  - uid: System.Collections.IDictionary.Add(System.Object,System.Object)
    name: Add
    nameWithType: IDictionary.Add
    fullName: System.Collections.IDictionary.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IDictionary.Add(System.Object,System.Object)
    name: Add
    nameWithType: IDictionary.Add
    fullName: System.Collections.IDictionary.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: LitJson.JsonMockWrapper.System#Collections#IDictionary#Clear*
  commentId: Overload:LitJson.JsonMockWrapper.System#Collections#IDictionary#Clear
  name: IDictionary.Clear
  nameWithType: JsonMockWrapper.IDictionary.Clear
  fullName: LitJson.JsonMockWrapper.System.Collections.IDictionary.Clear
  nameWithType.vb: JsonMockWrapper.System.Collections.IDictionary.Clear
  name.vb: System.Collections.IDictionary.Clear
- uid: System.Collections.IDictionary.Clear
  commentId: M:System.Collections.IDictionary.Clear
  parent: System.Collections.IDictionary
  isExternal: true
  name: Clear()
  nameWithType: IDictionary.Clear()
  fullName: System.Collections.IDictionary.Clear()
  spec.csharp:
  - uid: System.Collections.IDictionary.Clear
    name: Clear
    nameWithType: IDictionary.Clear
    fullName: System.Collections.IDictionary.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IDictionary.Clear
    name: Clear
    nameWithType: IDictionary.Clear
    fullName: System.Collections.IDictionary.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: LitJson.JsonMockWrapper.System#Collections#IDictionary#Contains*
  commentId: Overload:LitJson.JsonMockWrapper.System#Collections#IDictionary#Contains
  name: IDictionary.Contains
  nameWithType: JsonMockWrapper.IDictionary.Contains
  fullName: LitJson.JsonMockWrapper.System.Collections.IDictionary.Contains
  nameWithType.vb: JsonMockWrapper.System.Collections.IDictionary.Contains
  name.vb: System.Collections.IDictionary.Contains
- uid: System.Collections.IDictionary.Contains(System.Object)
  commentId: M:System.Collections.IDictionary.Contains(System.Object)
  parent: System.Collections.IDictionary
  isExternal: true
  name: Contains(Object)
  nameWithType: IDictionary.Contains(Object)
  fullName: System.Collections.IDictionary.Contains(System.Object)
  spec.csharp:
  - uid: System.Collections.IDictionary.Contains(System.Object)
    name: Contains
    nameWithType: IDictionary.Contains
    fullName: System.Collections.IDictionary.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IDictionary.Contains(System.Object)
    name: Contains
    nameWithType: IDictionary.Contains
    fullName: System.Collections.IDictionary.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: LitJson.JsonMockWrapper.System#Collections#IDictionary#Remove*
  commentId: Overload:LitJson.JsonMockWrapper.System#Collections#IDictionary#Remove
  name: IDictionary.Remove
  nameWithType: JsonMockWrapper.IDictionary.Remove
  fullName: LitJson.JsonMockWrapper.System.Collections.IDictionary.Remove
  nameWithType.vb: JsonMockWrapper.System.Collections.IDictionary.Remove
  name.vb: System.Collections.IDictionary.Remove
- uid: System.Collections.IDictionary.Remove(System.Object)
  commentId: M:System.Collections.IDictionary.Remove(System.Object)
  parent: System.Collections.IDictionary
  isExternal: true
  name: Remove(Object)
  nameWithType: IDictionary.Remove(Object)
  fullName: System.Collections.IDictionary.Remove(System.Object)
  spec.csharp:
  - uid: System.Collections.IDictionary.Remove(System.Object)
    name: Remove
    nameWithType: IDictionary.Remove
    fullName: System.Collections.IDictionary.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IDictionary.Remove(System.Object)
    name: Remove
    nameWithType: IDictionary.Remove
    fullName: System.Collections.IDictionary.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: LitJson.JsonMockWrapper.System#Collections#IDictionary#GetEnumerator*
  commentId: Overload:LitJson.JsonMockWrapper.System#Collections#IDictionary#GetEnumerator
  name: IDictionary.GetEnumerator
  nameWithType: JsonMockWrapper.IDictionary.GetEnumerator
  fullName: LitJson.JsonMockWrapper.System.Collections.IDictionary.GetEnumerator
  nameWithType.vb: JsonMockWrapper.System.Collections.IDictionary.GetEnumerator
  name.vb: System.Collections.IDictionary.GetEnumerator
- uid: System.Collections.IDictionary.GetEnumerator
  commentId: M:System.Collections.IDictionary.GetEnumerator
  parent: System.Collections.IDictionary
  isExternal: true
  name: GetEnumerator()
  nameWithType: IDictionary.GetEnumerator()
  fullName: System.Collections.IDictionary.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IDictionary.GetEnumerator
    name: GetEnumerator
    nameWithType: IDictionary.GetEnumerator
    fullName: System.Collections.IDictionary.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IDictionary.GetEnumerator
    name: GetEnumerator
    nameWithType: IDictionary.GetEnumerator
    fullName: System.Collections.IDictionary.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IDictionaryEnumerator
  commentId: T:System.Collections.IDictionaryEnumerator
  parent: System.Collections
  isExternal: true
  name: IDictionaryEnumerator
  nameWithType: IDictionaryEnumerator
  fullName: System.Collections.IDictionaryEnumerator
- uid: LitJson.JsonMockWrapper.System#Collections#Specialized#IOrderedDictionary#Item*
  commentId: Overload:LitJson.JsonMockWrapper.System#Collections#Specialized#IOrderedDictionary#Item
  name: IOrderedDictionary.Item
  nameWithType: JsonMockWrapper.IOrderedDictionary.Item
  fullName: LitJson.JsonMockWrapper.System.Collections.Specialized.IOrderedDictionary.Item
  nameWithType.vb: JsonMockWrapper.System.Collections.Specialized.IOrderedDictionary.Item
  name.vb: System.Collections.Specialized.IOrderedDictionary.Item
- uid: System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)
  commentId: P:System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)
  parent: System.Collections.Specialized.IOrderedDictionary
  isExternal: true
  name: Item[Int32]
  nameWithType: IOrderedDictionary.Item[Int32]
  fullName: System.Collections.Specialized.IOrderedDictionary.Item[System.Int32]
  nameWithType.vb: IOrderedDictionary.Item(Int32)
  fullName.vb: System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)
    name: Item
    nameWithType: IOrderedDictionary.Item
    fullName: System.Collections.Specialized.IOrderedDictionary.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)
    name: Item
    nameWithType: IOrderedDictionary.Item
    fullName: System.Collections.Specialized.IOrderedDictionary.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: LitJson.JsonMockWrapper.System#Collections#Specialized#IOrderedDictionary#GetEnumerator*
  commentId: Overload:LitJson.JsonMockWrapper.System#Collections#Specialized#IOrderedDictionary#GetEnumerator
  name: IOrderedDictionary.GetEnumerator
  nameWithType: JsonMockWrapper.IOrderedDictionary.GetEnumerator
  fullName: LitJson.JsonMockWrapper.System.Collections.Specialized.IOrderedDictionary.GetEnumerator
  nameWithType.vb: JsonMockWrapper.System.Collections.Specialized.IOrderedDictionary.GetEnumerator
  name.vb: System.Collections.Specialized.IOrderedDictionary.GetEnumerator
- uid: System.Collections.Specialized.IOrderedDictionary.GetEnumerator
  commentId: M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator
  parent: System.Collections.Specialized.IOrderedDictionary
  isExternal: true
  name: GetEnumerator()
  nameWithType: IOrderedDictionary.GetEnumerator()
  fullName: System.Collections.Specialized.IOrderedDictionary.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Specialized.IOrderedDictionary.GetEnumerator
    name: GetEnumerator
    nameWithType: IOrderedDictionary.GetEnumerator
    fullName: System.Collections.Specialized.IOrderedDictionary.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Specialized.IOrderedDictionary.GetEnumerator
    name: GetEnumerator
    nameWithType: IOrderedDictionary.GetEnumerator
    fullName: System.Collections.Specialized.IOrderedDictionary.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: LitJson.JsonMockWrapper.System#Collections#Specialized#IOrderedDictionary#Insert*
  commentId: Overload:LitJson.JsonMockWrapper.System#Collections#Specialized#IOrderedDictionary#Insert
  name: IOrderedDictionary.Insert
  nameWithType: JsonMockWrapper.IOrderedDictionary.Insert
  fullName: LitJson.JsonMockWrapper.System.Collections.Specialized.IOrderedDictionary.Insert
  nameWithType.vb: JsonMockWrapper.System.Collections.Specialized.IOrderedDictionary.Insert
  name.vb: System.Collections.Specialized.IOrderedDictionary.Insert
- uid: System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)
  commentId: M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)
  parent: System.Collections.Specialized.IOrderedDictionary
  isExternal: true
  name: Insert(Int32, Object, Object)
  nameWithType: IOrderedDictionary.Insert(Int32, Object, Object)
  fullName: System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32, System.Object, System.Object)
  spec.csharp:
  - uid: System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)
    name: Insert
    nameWithType: IOrderedDictionary.Insert
    fullName: System.Collections.Specialized.IOrderedDictionary.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)
    name: Insert
    nameWithType: IOrderedDictionary.Insert
    fullName: System.Collections.Specialized.IOrderedDictionary.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: LitJson.JsonMockWrapper.System#Collections#Specialized#IOrderedDictionary#RemoveAt*
  commentId: Overload:LitJson.JsonMockWrapper.System#Collections#Specialized#IOrderedDictionary#RemoveAt
  name: IOrderedDictionary.RemoveAt
  nameWithType: JsonMockWrapper.IOrderedDictionary.RemoveAt
  fullName: LitJson.JsonMockWrapper.System.Collections.Specialized.IOrderedDictionary.RemoveAt
  nameWithType.vb: JsonMockWrapper.System.Collections.Specialized.IOrderedDictionary.RemoveAt
  name.vb: System.Collections.Specialized.IOrderedDictionary.RemoveAt
- uid: System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)
  commentId: M:System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)
  parent: System.Collections.Specialized.IOrderedDictionary
  isExternal: true
  name: RemoveAt(Int32)
  nameWithType: IOrderedDictionary.RemoveAt(Int32)
  fullName: System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: IOrderedDictionary.RemoveAt
    fullName: System.Collections.Specialized.IOrderedDictionary.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: IOrderedDictionary.RemoveAt
    fullName: System.Collections.Specialized.IOrderedDictionary.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
