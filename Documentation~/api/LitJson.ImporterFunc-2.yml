### YamlMime:ManagedReference
items:
- uid: LitJson.ImporterFunc`2
  commentId: T:LitJson.ImporterFunc`2
  id: ImporterFunc`2
  parent: LitJson
  children: []
  langs:
  - csharp
  - vb
  name: ImporterFunc<TJson, TValue>
  nameWithType: ImporterFunc<TJson, TValue>
  fullName: LitJson.ImporterFunc<TJson, TValue>
  type: Delegate
  source:
    remote:
      path: Source/JsonMapper.cs
      branch: master
      repo: https://github.com/MacacaGames/UnityLitJson.git
    id: ImporterFunc
    path: ../Source/JsonMapper.cs
    startLine: 78
  assemblies:
  - UnityLitJson
  namespace: LitJson
  syntax:
    content: public delegate TValue ImporterFunc<TJson, TValue>(TJson input);
    parameters:
    - id: input
      type: '{TJson}'
    typeParameters:
    - id: TJson
    - id: TValue
    return:
      type: '{TValue}'
    content.vb: Public Delegate Function ImporterFunc(Of TJson, TValue)(input As TJson) As TValue
  nameWithType.vb: ImporterFunc(Of TJson, TValue)
  modifiers.csharp:
  - public
  - delegate
  modifiers.vb:
  - Public
  - Delegate
  fullName.vb: LitJson.ImporterFunc(Of TJson, TValue)
  name.vb: ImporterFunc(Of TJson, TValue)
references:
- uid: LitJson
  commentId: N:LitJson
  name: LitJson
  nameWithType: LitJson
  fullName: LitJson
- uid: '{TJson}'
  commentId: '!:TJson'
  definition: TJson
  name: TJson
  nameWithType: TJson
  fullName: TJson
- uid: '{TValue}'
  commentId: '!:TValue'
  definition: TValue
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: TJson
  commentId: '!:TJson'
  name: TJson
  nameWithType: TJson
  fullName: TJson
- uid: TValue
  commentId: '!:TValue'
  name: TValue
  nameWithType: TValue
  fullName: TValue
